import{s as _,n as z,e as u,c as f,b as ps,S as b,f as p,Z as Ts,v as S,D as Zs,i as c,h as os,_ as Us,$ as Gs,a0 as Xs,a as m,g as E}from"./scheduler.BMc8JP4_.js";import{S as L,i as T,b as $,d as F,m as g,a as h,t as v,e as A}from"./index.CNWtZWm0.js";import{F as rs,a as cs,b as K,L as N,E as Ds,c as Qs,d as Vs,f as Bs}from"./Overlay.svelte_svelte_type_style_lang.CDbq7vPD.js";function sn(t){let s,e;return s=new N({props:{id:"hello"}}),{c(){$(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,l){g(s,n,l),e=!0},p:z,i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){v(s.$$.fragment,n),e=!1},d(n){A(s,n)}}}function nn(t){let s,e;return s=new rs({props:{bundles:[t[0]],$$slots:{default:[sn]},$$scope:{ctx:t}}}),{c(){$(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,l){g(s,n,l),e=!0},p(n,[l]){const o={};l&2&&(o.$$scope={dirty:l,ctx:n}),s.$set(o)},i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){v(s.$$.fragment,n),e=!1},d(n){A(s,n)}}}const en="hello = Hello, world!";function an(t){const s=new cs("en");return s.addResource(new K(en)),[s]}let ln=class extends L{constructor(s){super(),T(this,s,an,nn,_,{})}};const tn=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">FluentResource</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentProvider</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> translations</span><span style="color:#D4D4D4"> = </span><span style="color:#CE9178">'hello = Hello, world!'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#9CDCFE">	bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">translations</span><span style="color:#D4D4D4">));</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#4EC9B0">FluentProvider</span><span style="color:#9CDCFE"> bundles</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">[</span><span style="color:#9CDCFE">bundle</span><span style="color:#D4D4D4">]</span><span style="color:#569CD6">}</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">	&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"hello"</span><span style="color:#808080"> /></span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#4EC9B0">FluentProvider</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`;function on(t){let s,e;return s=new Ds({props:{sources:{"App.svelte":{code:tn,html:!0}},component:ln}}),{c(){$(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,l){g(s,n,l),e=!0},p:z,i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){v(s.$$.fragment,n),e=!1},d(n){A(s,n)}}}let pn=class extends L{constructor(s){super(),T(this,s,null,on,_,{})}};const rn=`hello = Hello, world!
`;function cn(t){let s,e;return s=new N({props:{id:"hello"}}),{c(){$(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,l){g(s,n,l),e=!0},p:z,i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){v(s.$$.fragment,n),e=!1},d(n){A(s,n)}}}function Dn(t){let s,e;return s=new rs({props:{bundles:[t[0]],$$slots:{default:[cn]},$$scope:{ctx:t}}}),{c(){$(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,l){g(s,n,l),e=!0},p(n,[l]){const o={};l&4&&(o.$$scope={dirty:l,ctx:n}),s.$set(o)},i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){v(s.$$.fragment,n),e=!1},d(n){A(s,n)}}}function yn(t){const s=new K(rn),e=new cs("en");return e.addResource(s),[e]}let Cn=class extends L{constructor(s){super(),T(this,s,yn,Dn,_,{})}};const un=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">FluentResource</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentProvider</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> translationsEn</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './en.ftl?raw'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> resource</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">translationsEn</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#9CDCFE">	bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resource</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#4EC9B0">FluentProvider</span><span style="color:#9CDCFE"> bundles</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">[</span><span style="color:#9CDCFE">bundle</span><span style="color:#D4D4D4">]</span><span style="color:#569CD6">}</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">	&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"hello"</span><span style="color:#808080"> /></span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#4EC9B0">FluentProvider</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,fn=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hello, world!</span></span>
<span class="line"></span></code></pre>`;function dn(t){let s,e;return s=new Ds({props:{sources:{"App.svelte":{code:un,html:!0},"en.ftl":{code:fn,html:!0}},component:Cn}}),{c(){$(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,l){g(s,n,l),e=!0},p:z,i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){v(s.$$.fragment,n),e=!1},d(n){A(s,n)}}}let mn=class extends L{constructor(s){super(),T(this,s,null,dn,_,{})}};const En="([a-z]{2,3}|\\*)",$n="(?:-([a-z]{4}|\\*))",Fn="(?:-([a-z]{2}|\\*))",gn="(?:-(([0-9][a-z0-9]{3}|[a-z0-9]{5,8})|\\*))",hn=new RegExp(`^${En}${$n}?${Fn}?${gn}?$`,"i");class is{constructor(s){const e=hn.exec(s.replace(/_/g,"-"));if(!e){this.isWellFormed=!1;return}let[,n,l,o,C]=e;n&&(this.language=n.toLowerCase()),l&&(this.script=l[0].toUpperCase()+l.slice(1)),o&&(this.region=o.toUpperCase()),this.variant=C,this.isWellFormed=!0}isEqual(s){return this.language===s.language&&this.script===s.script&&this.region===s.region&&this.variant===s.variant}matches(s,e=!1,n=!1){return(this.language===s.language||e&&this.language===void 0||n&&s.language===void 0)&&(this.script===s.script||e&&this.script===void 0||n&&s.script===void 0)&&(this.region===s.region||e&&this.region===void 0||n&&s.region===void 0)&&(this.variant===s.variant||e&&this.variant===void 0||n&&s.variant===void 0)}toString(){return[this.language,this.script,this.region,this.variant].filter(s=>s!==void 0).join("-")}clearVariants(){this.variant=void 0}clearRegion(){this.region=void 0}addLikelySubtags(){const s=An(this.toString().toLowerCase());return s?(this.language=s.language,this.script=s.script,this.region=s.region,this.variant=s.variant,!0):!1}}const Js={ar:"ar-arab-eg","az-arab":"az-arab-ir","az-ir":"az-arab-ir",be:"be-cyrl-by",da:"da-latn-dk",el:"el-grek-gr",en:"en-latn-us",fa:"fa-arab-ir",ja:"ja-jpan-jp",ko:"ko-kore-kr",pt:"pt-latn-br",sr:"sr-cyrl-rs","sr-ru":"sr-latn-ru",sv:"sv-latn-se",ta:"ta-taml-in",uk:"uk-cyrl-ua",zh:"zh-hans-cn","zh-hant":"zh-hant-tw","zh-hk":"zh-hant-hk","zh-mo":"zh-hant-mo","zh-tw":"zh-hant-tw","zh-gb":"zh-hant-gb","zh-us":"zh-hant-us"},vn=["az","bg","cs","de","es","fi","fr","hu","it","lt","lv","nl","pl","ro","ru"];function An(t){if(Object.prototype.hasOwnProperty.call(Js,t))return new is(Js[t]);const s=new is(t);return s.language&&vn.includes(s.language)?(s.region=s.language.toUpperCase(),s):null}function bn(t,s,e){const n=new Set,l=new Map;for(let o of s)new is(o).isWellFormed&&l.set(o,new is(o));s:for(const o of t){const C=o.toLowerCase(),i=new is(C);if(i.language!==void 0){for(const D of l.keys())if(C===D.toLowerCase()){if(n.add(D),l.delete(D),e==="lookup")return Array.from(n);if(e==="filtering")continue;continue s}for(const[D,d]of l.entries())if(d.matches(i,!0,!1)){if(n.add(D),l.delete(D),e==="lookup")return Array.from(n);if(e==="filtering")continue;continue s}if(i.addLikelySubtags()){for(const[D,d]of l.entries())if(d.matches(i,!0,!1)){if(n.add(D),l.delete(D),e==="lookup")return Array.from(n);if(e==="filtering")continue;continue s}}i.clearVariants();for(const[D,d]of l.entries())if(d.matches(i,!0,!0)){if(n.add(D),l.delete(D),e==="lookup")return Array.from(n);if(e==="filtering")continue;continue s}if(i.clearRegion(),i.addLikelySubtags()){for(const[D,d]of l.entries())if(d.matches(i,!0,!1)){if(n.add(D),l.delete(D),e==="lookup")return Array.from(n);if(e==="filtering")continue;continue s}}i.clearRegion();for(const[D,d]of l.entries())if(d.matches(i,!0,!0)){if(n.add(D),l.delete(D),e==="lookup")return Array.from(n);if(e==="filtering")continue;continue s}}}return Array.from(n)}function wn(t,s,{strategy:e="filtering",defaultLocale:n}={}){const l=bn(Array.from(t??[]).map(String),Array.from(s??[]).map(String),e);if(e==="lookup"){if(n===void 0)throw new Error("defaultLocale cannot be undefined for strategy `lookup`");l.length===0&&l.push(n)}else n&&!l.includes(n)&&l.push(n);return l}const xn=`hello = Hello, world!
`,kn=`hello = Hallo Welt!
`,_n=`hello = Salut le monde !
`;function Ln(t){let s,e;return s=new N({props:{id:"hello"}}),{c(){$(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,l){g(s,n,l),e=!0},p:z,i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){v(s.$$.fragment,n),e=!1},d(n){A(s,n)}}}function Tn(t){let s,e;return s=new rs({props:{bundles:t[1](t[0]?[t[0]]:navigator.languages),$$slots:{default:[Ln]},$$scope:{ctx:t}}}),{c(){$(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,l){g(s,n,l),e=!0},p(n,[l]){const o={};l&1&&(o.bundles=n[1](n[0]?[n[0]]:navigator.languages)),l&16&&(o.$$scope={dirty:l,ctx:n}),s.$set(o)},i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){v(s.$$.fragment,n),e=!1},d(n){A(s,n)}}}const Bn="en";function zn(t,s,e){let{selectedLocale:n=""}=s;const l={en:new K(xn),fr:new K(_n),de:new K(kn)},o=Object.keys(l);function C(i){return wn(i,o,{defaultLocale:Bn,strategy:"lookup"}).map(d=>{const y=new cs(d);return y.addResource(l[d]),y})}return t.$$set=i=>{"selectedLocale"in i&&e(0,n=i.selectedLocale)},[n,C]}let Hn=class extends L{constructor(s){super(),T(this,s,zn,Tn,_,{selectedLocale:0})}};const Mn=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">FluentResource</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentProvider</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">negotiateLanguages</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/langneg'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> translationsEn</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './en.ftl?raw'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> translationsDe</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './de.ftl?raw'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> translationsFr</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './fr.ftl?raw'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955">	// this could be stored in a user profile or browser localStorage</span></span>
<span class="line"><span style="color:#C586C0">	export</span><span style="color:#569CD6"> let</span><span style="color:#9CDCFE"> selectedLocale</span><span style="color:#D4D4D4"> = </span><span style="color:#CE9178">''</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> defaultLocale</span><span style="color:#D4D4D4"> = </span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> resources</span><span style="color:#D4D4D4"> = {</span></span>
<span class="line"><span style="color:#9CDCFE">		en:</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> FluentResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">translationsEn</span><span style="color:#D4D4D4">),</span></span>
<span class="line"><span style="color:#9CDCFE">		fr:</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> FluentResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">translationsFr</span><span style="color:#D4D4D4">),</span></span>
<span class="line"><span style="color:#9CDCFE">		de:</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> FluentResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">translationsDe</span><span style="color:#D4D4D4">)</span></span>
<span class="line"><span style="color:#D4D4D4">	};</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> supportedLocales</span><span style="color:#D4D4D4"> = </span><span style="color:#9CDCFE">Object</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">keys</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resources</span><span style="color:#D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	function</span><span style="color:#DCDCAA"> generateBundles</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">userLocales</span><span style="color:#D4D4D4">) {</span></span>
<span class="line"><span style="color:#6A9955">		// Choose locales that are best for the user.</span></span>
<span class="line"><span style="color:#569CD6">		const</span><span style="color:#4FC1FF"> selectedLocales</span><span style="color:#D4D4D4"> = </span><span style="color:#DCDCAA">negotiateLanguages</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">userLocales</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">supportedLocales</span><span style="color:#D4D4D4">, {</span></span>
<span class="line"><span style="color:#9CDCFE">			defaultLocale</span><span style="color:#D4D4D4">,</span></span>
<span class="line"><span style="color:#9CDCFE">			strategy:</span><span style="color:#CE9178"> 'lookup'</span></span>
<span class="line"><span style="color:#D4D4D4">		});</span></span>
<span class="line"><span style="color:#6A9955">		// prepare fluent bundles</span></span>
<span class="line"><span style="color:#C586C0">		return</span><span style="color:#9CDCFE"> selectedLocales</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">map</span><span style="color:#D4D4D4">((</span><span style="color:#9CDCFE">locale</span><span style="color:#D4D4D4">) </span><span style="color:#569CD6">=></span><span style="color:#D4D4D4"> {</span></span>
<span class="line"><span style="color:#569CD6">			const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">locale</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#9CDCFE">			bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resources</span><span style="color:#D4D4D4">[</span><span style="color:#9CDCFE">locale</span><span style="color:#D4D4D4">]);</span></span>
<span class="line"><span style="color:#C586C0">			return</span><span style="color:#9CDCFE"> bundle</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#D4D4D4">		});</span></span>
<span class="line"><span style="color:#D4D4D4">	}</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#4EC9B0">FluentProvider</span><span style="color:#9CDCFE"> bundles</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#DCDCAA">generateBundles</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">selectedLocale</span><span style="color:#D4D4D4"> ? [</span><span style="color:#9CDCFE">selectedLocale</span><span style="color:#D4D4D4">] : </span><span style="color:#9CDCFE">navigator</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">languages</span><span style="color:#D4D4D4">)</span><span style="color:#569CD6">}</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">	&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"hello"</span><span style="color:#808080"> /></span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#4EC9B0">FluentProvider</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,Pn=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hello, world!</span></span>
<span class="line"></span></code></pre>`,Sn=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Salut le monde !</span></span>
<span class="line"></span></code></pre>`,Rn=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hallo Welt!</span></span>
<span class="line"></span></code></pre>`;function On(t){let s,e,n='<label for="selected-locale">selectedLocale</label> ',l,o,C,i="auto",D,d="de",y,x="en",w,k="fr",R,H;return{c(){s=u("dl"),e=u("dt"),e.innerHTML=n,l=u("dd"),o=u("select"),C=u("option"),C.textContent=i,D=u("option"),D.textContent=d,y=u("option"),y.textContent=x,w=u("option"),w.textContent=k,this.h()},l(M){s=f(M,"DL",{slot:!0,class:!0});var B=ps(s);e=f(B,"DT",{"data-svelte-h":!0}),b(e)!=="svelte-1opy2sn"&&(e.innerHTML=n),l=f(B,"DD",{});var P=ps(l);o=f(P,"SELECT",{id:!0});var O=ps(o);C=f(O,"OPTION",{"data-svelte-h":!0}),b(C)!=="svelte-1btw20r"&&(C.textContent=i),D=f(O,"OPTION",{"data-svelte-h":!0}),b(D)!=="svelte-1v1w53e"&&(D.textContent=d),y=f(O,"OPTION",{"data-svelte-h":!0}),b(y)!=="svelte-192tdce"&&(y.textContent=x),w=f(O,"OPTION",{"data-svelte-h":!0}),b(w)!=="svelte-kurphq"&&(w.textContent=k),O.forEach(p),P.forEach(p),B.forEach(p),this.h()},h(){C.__value="",Ts(C,C.__value),D.__value="de",Ts(D,D.__value),y.__value="en",Ts(y,y.__value),w.__value="fr",Ts(w,w.__value),S(o,"id","selected-locale"),t[0].selectedLocale===void 0&&Zs(()=>t[1].call(o)),S(s,"slot","controls"),S(s,"class","svelte-74ye1h")},m(M,B){c(M,s,B),os(s,e),os(s,l),os(l,o),os(o,C),os(o,D),os(o,y),os(o,w),Us(o,t[0].selectedLocale,!0),R||(H=Gs(o,"change",t[1]),R=!0)},p(M,B){B&1&&Us(o,M[0].selectedLocale)},d(M){M&&p(s),R=!1,H()}}}function Wn(t){let s,e;return s=new Ds({props:{sources:{"App.svelte":{code:Mn,html:!0},"en.ftl":{code:Pn,html:!0},"fr.ftl":{code:Sn,html:!0},"de.ftl":{code:Rn,html:!0}},component:Hn,componentArgs:t[0],$$slots:{controls:[On]},$$scope:{ctx:t}}}),{c(){$(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,l){g(s,n,l),e=!0},p(n,[l]){const o={};l&1&&(o.componentArgs=n[0]),l&5&&(o.$$scope={dirty:l,ctx:n}),s.$set(o)},i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){v(s.$$.fragment,n),e=!1},d(n){A(s,n)}}}function Yn(t,s,e){const n={selectedLocale:""};function l(){n.selectedLocale=Xs(this),e(0,n)}return[n,l]}let jn=class extends L{constructor(s){super(),T(this,s,Yn,Wn,_,{})}};const In=`hello = Hello, { $name }!
`;function Kn(t){let s,e;return s=new N({props:{id:"hello",args:{name:"everyone"}}}),{c(){$(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,l){g(s,n,l),e=!0},p:z,i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){v(s.$$.fragment,n),e=!1},d(n){A(s,n)}}}function Nn(t){let s,e;return s=new rs({props:{bundles:[t[0]],$$slots:{default:[Kn]},$$scope:{ctx:t}}}),{c(){$(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,l){g(s,n,l),e=!0},p(n,[l]){const o={};l&4&&(o.$$scope={dirty:l,ctx:n}),s.$set(o)},i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){v(s.$$.fragment,n),e=!1},d(n){A(s,n)}}}function qn(t){const s=new K(In),e=new cs("en");return e.addResource(s),[e]}let Un=class extends L{constructor(s){super(),T(this,s,qn,Nn,_,{})}};const Vn=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">FluentResource</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentProvider</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> translationsEn</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './en.ftl?raw'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> resource</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">translationsEn</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#9CDCFE">	bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resource</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#4EC9B0">FluentProvider</span><span style="color:#9CDCFE"> bundles</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">[</span><span style="color:#9CDCFE">bundle</span><span style="color:#D4D4D4">]</span><span style="color:#569CD6">}</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">	&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"hello"</span><span style="color:#9CDCFE"> args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">name:</span><span style="color:#CE9178"> 'everyone'</span><span style="color:#D4D4D4"> }</span><span style="color:#569CD6">}</span><span style="color:#808080"> /></span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#4EC9B0">FluentProvider</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,Jn=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hello, </span><span style="color:#569CD6">{</span><span style="color:#9CDCFE"> $name </span><span style="color:#569CD6">}</span><span style="color:#CE9178">!</span></span>
<span class="line"></span></code></pre>`;function Qn(t){let s,e;return s=new Ds({props:{sources:{"App.svelte":{code:Vn,html:!0},"en.ftl":{code:Jn,html:!0}},component:Un}}),{c(){$(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,l){g(s,n,l),e=!0},p:z,i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){v(s.$$.fragment,n),e=!1},d(n){A(s,n)}}}let Zn=class extends L{constructor(s){super(),T(this,s,null,Qn,_,{})}};const Gn=`dpi-ratio = Your DPI ratio is { NUMBER($ratio, minimumFractionDigits: 2) }
balance = Your account balance is { $balance }
today-is = Today is { DATETIME($date, month: "long", year: "numeric", day: "numeric") }
`;function Xn(t){let s,e,n,l,o,C,i,D,d;return e=new N({props:{id:"dpi-ratio",args:{ratio:16/9}}}),o=new N({props:{id:"balance",args:{balance:new Qs(1234.56,{style:"currency",currency:"USD"})}}}),D=new N({props:{id:"today-is",args:{date:new Date}}}),{c(){s=u("div"),$(e.$$.fragment),n=m(),l=u("div"),$(o.$$.fragment),C=m(),i=u("div"),$(D.$$.fragment)},l(y){s=f(y,"DIV",{});var x=ps(s);F(e.$$.fragment,x),x.forEach(p),n=E(y),l=f(y,"DIV",{});var w=ps(l);F(o.$$.fragment,w),w.forEach(p),C=E(y),i=f(y,"DIV",{});var k=ps(i);F(D.$$.fragment,k),k.forEach(p)},m(y,x){c(y,s,x),g(e,s,null),c(y,n,x),c(y,l,x),g(o,l,null),c(y,C,x),c(y,i,x),g(D,i,null),d=!0},p:z,i(y){d||(h(e.$$.fragment,y),h(o.$$.fragment,y),h(D.$$.fragment,y),d=!0)},o(y){v(e.$$.fragment,y),v(o.$$.fragment,y),v(D.$$.fragment,y),d=!1},d(y){y&&(p(s),p(n),p(l),p(C),p(i)),A(e),A(o),A(D)}}}function se(t){let s,e;return s=new rs({props:{bundles:[t[0]],$$slots:{default:[Xn]},$$scope:{ctx:t}}}),{c(){$(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,l){g(s,n,l),e=!0},p(n,[l]){const o={};l&4&&(o.$$scope={dirty:l,ctx:n}),s.$set(o)},i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){v(s.$$.fragment,n),e=!1},d(n){A(s,n)}}}function ne(t){const s=new K(Gn),e=new cs("en");return e.addResource(s),[e]}let ee=class extends L{constructor(s){super(),T(this,s,ne,se,_,{})}};const ae=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">FluentNumber</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">FluentResource</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentProvider</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> translationsEn</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './en.ftl?raw'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> resource</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">translationsEn</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#9CDCFE">	bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resource</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#4EC9B0">FluentProvider</span><span style="color:#9CDCFE"> bundles</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">[</span><span style="color:#9CDCFE">bundle</span><span style="color:#D4D4D4">]</span><span style="color:#569CD6">}</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">	&#x3C;</span><span style="color:#569CD6">div</span><span style="color:#808080">>&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"dpi-ratio"</span><span style="color:#9CDCFE"> args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">ratio:</span><span style="color:#B5CEA8"> 16</span><span style="color:#D4D4D4"> / </span><span style="color:#B5CEA8">9</span><span style="color:#D4D4D4"> }</span><span style="color:#569CD6">}</span><span style="color:#808080"> />&#x3C;/</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">	&#x3C;</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">		&#x3C;</span><span style="color:#4EC9B0">Localized</span></span>
<span class="line"><span style="color:#9CDCFE">			id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"balance"</span></span>
<span class="line"><span style="color:#9CDCFE">			args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">balance:</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> FluentNumber</span><span style="color:#D4D4D4">(</span><span style="color:#B5CEA8">1234.56</span><span style="color:#D4D4D4">, { </span><span style="color:#9CDCFE">style:</span><span style="color:#CE9178"> 'currency'</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">currency:</span><span style="color:#CE9178"> 'USD'</span><span style="color:#D4D4D4"> }) }</span><span style="color:#569CD6">}</span></span>
<span class="line"><span style="color:#808080">		/></span></span>
<span class="line"><span style="color:#808080">	&#x3C;/</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">	&#x3C;</span><span style="color:#569CD6">div</span><span style="color:#808080">>&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"today-is"</span><span style="color:#9CDCFE"> args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">date:</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> Date</span><span style="color:#D4D4D4">() }</span><span style="color:#569CD6">}</span><span style="color:#808080"> />&#x3C;/</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#4EC9B0">FluentProvider</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,le=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">dpi-ratio = </span><span style="color:#CE9178">Your DPI ratio is </span><span style="color:#569CD6">{</span><span style="color:#DCDCAA"> NUMBER(</span><span style="color:#9CDCFE">$ratio</span><span style="color:#DCDCAA">,</span><span style="color:#DCDCAA"> minimumFractionDigits:</span><span style="color:#9CDCFE"> 2</span><span style="color:#DCDCAA">)</span><span style="color:#569CD6"> }</span></span>
<span class="line"><span style="color:#4EC9B0">balance = </span><span style="color:#CE9178">Your account balance is </span><span style="color:#569CD6">{</span><span style="color:#9CDCFE"> $balance </span><span style="color:#569CD6">}</span></span>
<span class="line"><span style="color:#4EC9B0">today-is = </span><span style="color:#CE9178">Today is </span><span style="color:#569CD6">{</span><span style="color:#DCDCAA"> DATETIME(</span><span style="color:#9CDCFE">$date</span><span style="color:#DCDCAA">,</span><span style="color:#DCDCAA"> month:</span><span style="color:#9CDCFE"> "long"</span><span style="color:#DCDCAA">,</span><span style="color:#DCDCAA"> year:</span><span style="color:#9CDCFE"> "numeric"</span><span style="color:#DCDCAA">,</span><span style="color:#DCDCAA"> day:</span><span style="color:#9CDCFE"> "numeric"</span><span style="color:#DCDCAA">)</span><span style="color:#569CD6"> }</span></span>
<span class="line"></span></code></pre>`;function te(t){let s,e;return s=new Ds({props:{sources:{"App.svelte":{code:ae,html:!0},"en.ftl":{code:le,html:!0}},component:ee}}),{c(){$(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,l){g(s,n,l),e=!0},p:z,i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){v(s.$$.fragment,n),e=!1},d(n){A(s,n)}}}let oe=class extends L{constructor(s){super(),T(this,s,null,te,_,{})}};const pe=`weekday-is = Weekday { $weekday } is { WEEKDAY($weekday) }
`;function re(t){let s,e;return s=new N({props:{id:"weekday-is",args:{weekday:2}}}),{c(){$(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,l){g(s,n,l),e=!0},p:z,i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){v(s.$$.fragment,n),e=!1},d(n){A(s,n)}}}function ce(t){let s,e;return s=new rs({props:{bundles:[t[0]],$$slots:{default:[re]},$$scope:{ctx:t}}}),{c(){$(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,l){g(s,n,l),e=!0},p(n,[l]){const o={};l&16&&(o.$$scope={dirty:l,ctx:n}),s.$set(o)},i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){v(s.$$.fragment,n),e=!1},d(n){A(s,n)}}}function zs(t,s){const e=Object.create(null);for(const[n,l]of Object.entries(t))s.includes(n)&&(e[n]=l.valueOf());return e}function De(t){const s=["weekday"];function e(o,C){const i=o[0];if(i instanceof Vs)return new Vs(`WEEKDAY(${i.valueOf()})`);if(i instanceof Bs)return new Bs(i.valueOf(),{...zs(i.opts,s),...zs(C,s)});if(i instanceof Qs){const D=new Date(Date.now()),d=i.valueOf()-D.getDay();return D.setDate(D.getDate()+d),new Bs(D.valueOf(),{weekday:"long",...zs(C,s)})}throw new TypeError("Invalid argument to WEEKDAY")}const n=new K(pe),l=new cs("en",{functions:{WEEKDAY:e}});return l.addResource(n),[l]}class ie extends L{constructor(s){super(),T(this,s,De,ce,_,{})}}const ye=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> {</span></span>
<span class="line"><span style="color:#9CDCFE">		FluentBundle</span><span style="color:#D4D4D4">,</span></span>
<span class="line"><span style="color:#9CDCFE">		FluentDateTime</span><span style="color:#D4D4D4">,</span></span>
<span class="line"><span style="color:#9CDCFE">		FluentNone</span><span style="color:#D4D4D4">,</span></span>
<span class="line"><span style="color:#9CDCFE">		FluentNumber</span><span style="color:#D4D4D4">,</span></span>
<span class="line"><span style="color:#9CDCFE">		FluentResource</span></span>
<span class="line"><span style="color:#D4D4D4">	} </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentProvider</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> translationsEn</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './en.ftl?raw'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	function</span><span style="color:#DCDCAA"> values</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">opts</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">allowed</span><span style="color:#D4D4D4">) {</span></span>
<span class="line"><span style="color:#569CD6">		const</span><span style="color:#4FC1FF"> unwrapped</span><span style="color:#D4D4D4"> = </span><span style="color:#9CDCFE">Object</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">create</span><span style="color:#D4D4D4">(</span><span style="color:#569CD6">null</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#C586C0">		for</span><span style="color:#D4D4D4"> (</span><span style="color:#569CD6">const</span><span style="color:#D4D4D4"> [</span><span style="color:#4FC1FF">name</span><span style="color:#D4D4D4">, </span><span style="color:#4FC1FF">opt</span><span style="color:#D4D4D4">] </span><span style="color:#569CD6">of</span><span style="color:#9CDCFE"> Object</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">entries</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">opts</span><span style="color:#D4D4D4">)) {</span></span>
<span class="line"><span style="color:#C586C0">			if</span><span style="color:#D4D4D4"> (</span><span style="color:#9CDCFE">allowed</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">includes</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">name</span><span style="color:#D4D4D4">)) {</span></span>
<span class="line"><span style="color:#9CDCFE">				unwrapped</span><span style="color:#D4D4D4">[</span><span style="color:#9CDCFE">name</span><span style="color:#D4D4D4">] = </span><span style="color:#9CDCFE">opt</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">valueOf</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#D4D4D4">			}</span></span>
<span class="line"><span style="color:#D4D4D4">		}</span></span>
<span class="line"><span style="color:#C586C0">		return</span><span style="color:#9CDCFE"> unwrapped</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#D4D4D4">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> WEEKDAY_ALLOWED</span><span style="color:#D4D4D4"> = [</span><span style="color:#CE9178">'weekday'</span><span style="color:#D4D4D4">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	function</span><span style="color:#DCDCAA"> WEEKDAY</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">args</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">opts</span><span style="color:#D4D4D4">) {</span></span>
<span class="line"><span style="color:#569CD6">		const</span><span style="color:#4FC1FF"> arg</span><span style="color:#D4D4D4"> = </span><span style="color:#9CDCFE">args</span><span style="color:#D4D4D4">[</span><span style="color:#B5CEA8">0</span><span style="color:#D4D4D4">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">		if</span><span style="color:#D4D4D4"> (</span><span style="color:#9CDCFE">arg</span><span style="color:#569CD6"> instanceof</span><span style="color:#4EC9B0"> FluentNone</span><span style="color:#D4D4D4">) {</span></span>
<span class="line"><span style="color:#C586C0">			return</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> FluentNone</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">\`WEEKDAY(</span><span style="color:#569CD6">\${</span><span style="color:#9CDCFE">arg</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">valueOf</span><span style="color:#D4D4D4">()</span><span style="color:#569CD6">}</span><span style="color:#CE9178">)\`</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#D4D4D4">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">		if</span><span style="color:#D4D4D4"> (</span><span style="color:#9CDCFE">arg</span><span style="color:#569CD6"> instanceof</span><span style="color:#4EC9B0"> FluentDateTime</span><span style="color:#D4D4D4">) {</span></span>
<span class="line"><span style="color:#C586C0">			return</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> FluentDateTime</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">arg</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">valueOf</span><span style="color:#D4D4D4">(), {</span></span>
<span class="line"><span style="color:#D4D4D4">				...</span><span style="color:#DCDCAA">values</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">arg</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">opts</span><span style="color:#D4D4D4">, </span><span style="color:#4FC1FF">WEEKDAY_ALLOWED</span><span style="color:#D4D4D4">),</span></span>
<span class="line"><span style="color:#D4D4D4">				...</span><span style="color:#DCDCAA">values</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">opts</span><span style="color:#D4D4D4">, </span><span style="color:#4FC1FF">WEEKDAY_ALLOWED</span><span style="color:#D4D4D4">)</span></span>
<span class="line"><span style="color:#D4D4D4">			});</span></span>
<span class="line"><span style="color:#D4D4D4">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">		if</span><span style="color:#D4D4D4"> (</span><span style="color:#9CDCFE">arg</span><span style="color:#569CD6"> instanceof</span><span style="color:#4EC9B0"> FluentNumber</span><span style="color:#D4D4D4">) {</span></span>
<span class="line"><span style="color:#569CD6">			const</span><span style="color:#4FC1FF"> date</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> Date</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">Date</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">now</span><span style="color:#D4D4D4">());</span></span>
<span class="line"><span style="color:#569CD6">			const</span><span style="color:#4FC1FF"> offset</span><span style="color:#D4D4D4"> = </span><span style="color:#9CDCFE">arg</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">valueOf</span><span style="color:#D4D4D4">() - </span><span style="color:#9CDCFE">date</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">getDay</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#9CDCFE">			date</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">setDate</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">date</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">getDate</span><span style="color:#D4D4D4">() + </span><span style="color:#9CDCFE">offset</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#C586C0">			return</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> FluentDateTime</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">date</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">valueOf</span><span style="color:#D4D4D4">(), {</span></span>
<span class="line"><span style="color:#9CDCFE">				weekday:</span><span style="color:#CE9178"> 'long'</span><span style="color:#D4D4D4">,</span></span>
<span class="line"><span style="color:#D4D4D4">				...</span><span style="color:#DCDCAA">values</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">opts</span><span style="color:#D4D4D4">, </span><span style="color:#4FC1FF">WEEKDAY_ALLOWED</span><span style="color:#D4D4D4">)</span></span>
<span class="line"><span style="color:#D4D4D4">			});</span></span>
<span class="line"><span style="color:#D4D4D4">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">		throw</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> TypeError</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'Invalid argument to WEEKDAY'</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#D4D4D4">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> resource</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">translationsEn</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">, { </span><span style="color:#9CDCFE">functions:</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">WEEKDAY</span><span style="color:#D4D4D4"> } });</span></span>
<span class="line"><span style="color:#9CDCFE">	bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resource</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#4EC9B0">FluentProvider</span><span style="color:#9CDCFE"> bundles</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">[</span><span style="color:#9CDCFE">bundle</span><span style="color:#D4D4D4">]</span><span style="color:#569CD6">}</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">	&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"weekday-is"</span><span style="color:#9CDCFE"> args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">weekday:</span><span style="color:#B5CEA8"> 2</span><span style="color:#D4D4D4"> }</span><span style="color:#569CD6">}</span><span style="color:#808080"> /></span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#4EC9B0">FluentProvider</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,Ce=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">weekday-is = </span><span style="color:#CE9178">Weekday </span><span style="color:#569CD6">{</span><span style="color:#9CDCFE"> $weekday </span><span style="color:#569CD6">}</span><span style="color:#CE9178"> is </span><span style="color:#569CD6">{</span><span style="color:#DCDCAA"> WEEKDAY(</span><span style="color:#9CDCFE">$weekday</span><span style="color:#DCDCAA">)</span><span style="color:#569CD6"> }</span></span>
<span class="line"></span></code></pre>`;function ue(t){let s,e;return s=new Ds({props:{sources:{"App.svelte":{code:ye,html:!0},"en.ftl":{code:Ce,html:!0}},component:ie}}),{c(){$(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,l){g(s,n,l),e=!0},p:z,i(n){e||(h(s.$$.fragment,n),e=!0)},o(n){v(s.$$.fragment,n),e=!1},d(n){A(s,n)}}}class fe extends L{constructor(s){super(),T(this,s,null,ue,_,{})}}function de(t){let s,e="Tutorial",n,l,o='<a href="#first-steps">First steps</a>',C,i,D="You need to provide your translations to <code>svelte-fluent</code> by adding the <code>FluentProvider</code> component in your component hierarchy.",d,y,x="In the most basic setup those translations can be defined directly in the code like this:",w,k,R,H,M='<a href="#load-translations-from-files">Load translations from files</a>',B,P,O=`Managing translations directly in the code can get messy.
A better way is to load translations from <code>.ftl</code> files.`,ys,q,Hs=`<p>The bundler must support importing <code>.ftl</code> files as strings:</p> <ul><li>For <a href="https://vitejs.dev/" rel="noopener noreferrer" target="_blank">Vite</a> you can add <code>?raw</code> to your import like in the example below.</li> <li>For <a href="https://rollupjs.org/" rel="noopener noreferrer" target="_blank">Rollup</a> you can add <a href="https://www.npmjs.com/package/rollup-plugin-string" rel="noopener noreferrer" target="_blank">rollup-plugin-string</a>
to your configuration.</li></ul>`,Cs,U,us,W,Ms='<a href="#multiple-languages">Multiple languages</a>',fs,V,Ps=`With the basics in place we can now extend this to multiple languages.
This example shows selection of the desired language and provides a fallback to
the auto-detected language from the browser.`,ds,J,Ss=`<p>This example will fail when used with server-side rendering (SSR) because during
SSR the component cannot use browser-only globals like <code>navigator.languages</code>.</p> <p>As an alternative that works in SSR you can parse the
<a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Language" rel="noopener noreferrer" target="_blank">HTTP Accept-Language header</a>
and replace <code>navigator.languages</code> with the resulting list of locale identifiers.</p>`,ms,Q,Es,Y,Rs='<a href="#interpolation">Interpolation</a>',$s,Z,Os=`You can insert variables into your translated text by using
<a href="https://projectfluent.org/fluent/guide/placeables.html" rel="noopener noreferrer" target="_blank">Fluent Placeables</a>.
Values for those variables are provided via the <code>args</code> prop of the <code>Localized</code> and <code>Overlay</code> components.`,Fs,G,gs,j,Ws='<a href="#interpolation-formatting">Interpolation formatting</a>',hs,X,Ys=`Fluent outputs interpolations in a human readable format appropriate to the currently used locale.
You can customize the formatting by using <a href="https://projectfluent.org/fluent/guide/functions.html" rel="noopener noreferrer" target="_blank">Fluent Functions</a>.`,vs,ss,js=`Formatting parameters listed in “Parameters” in the
<a href="https://projectfluent.org/fluent/guide/functions.html" rel="noopener noreferrer" target="_blank">Fluent Functions</a> documentation can be set both in the <code>.ftl</code>
files or in the JS source.`,As,ns,Is="Parameters listed in “Developer parameters” can only be set in JS code.",bs,es,ws,I,Ks='<a href="#custom-functions">Custom functions</a>',xs,as,Ns=`You can extend the default <a href="https://projectfluent.org/fluent/guide/functions.html" rel="noopener noreferrer" target="_blank">Fluent Functions</a>
with custom formatting functions by adding them to the <code>functions</code> option of <code>FluentBundle</code>.`,ks,ls,qs=`You can also check out the
<a href="https://github.com/projectfluent/fluent.js/blob/master/fluent-bundle/src/builtins.ts" rel="noopener noreferrer" target="_blank">code of the built-in Fluent Functions</a>
for more examples.`,_s,ts,Ls;return k=new pn({}),U=new mn({}),Q=new jn({}),G=new Zn({}),es=new oe({}),ts=new fe({}),{c(){s=u("h1"),s.textContent=e,n=m(),l=u("h2"),l.innerHTML=o,C=m(),i=u("p"),i.innerHTML=D,d=m(),y=u("p"),y.textContent=x,w=m(),$(k.$$.fragment),R=m(),H=u("h2"),H.innerHTML=M,B=m(),P=u("p"),P.innerHTML=O,ys=m(),q=u("blockquote"),q.innerHTML=Hs,Cs=m(),$(U.$$.fragment),us=m(),W=u("h2"),W.innerHTML=Ms,fs=m(),V=u("p"),V.textContent=Ps,ds=m(),J=u("blockquote"),J.innerHTML=Ss,ms=m(),$(Q.$$.fragment),Es=m(),Y=u("h2"),Y.innerHTML=Rs,$s=m(),Z=u("p"),Z.innerHTML=Os,Fs=m(),$(G.$$.fragment),gs=m(),j=u("h2"),j.innerHTML=Ws,hs=m(),X=u("p"),X.innerHTML=Ys,vs=m(),ss=u("p"),ss.innerHTML=js,As=m(),ns=u("p"),ns.textContent=Is,bs=m(),$(es.$$.fragment),ws=m(),I=u("h2"),I.innerHTML=Ks,xs=m(),as=u("p"),as.innerHTML=Ns,ks=m(),ls=u("p"),ls.innerHTML=qs,_s=m(),$(ts.$$.fragment),this.h()},l(a){s=f(a,"H1",{id:!0,"data-svelte-h":!0}),b(s)!=="svelte-it61nc"&&(s.textContent=e),n=E(a),l=f(a,"H2",{id:!0,"data-svelte-h":!0}),b(l)!=="svelte-1ykzw1b"&&(l.innerHTML=o),C=E(a),i=f(a,"P",{"data-svelte-h":!0}),b(i)!=="svelte-12p765g"&&(i.innerHTML=D),d=E(a),y=f(a,"P",{"data-svelte-h":!0}),b(y)!=="svelte-1t1n443"&&(y.textContent=x),w=E(a),F(k.$$.fragment,a),R=E(a),H=f(a,"H2",{id:!0,"data-svelte-h":!0}),b(H)!=="svelte-1ce9c6r"&&(H.innerHTML=M),B=E(a),P=f(a,"P",{"data-svelte-h":!0}),b(P)!=="svelte-w9wocp"&&(P.innerHTML=O),ys=E(a),q=f(a,"BLOCKQUOTE",{"data-svelte-h":!0}),b(q)!=="svelte-1bq8i05"&&(q.innerHTML=Hs),Cs=E(a),F(U.$$.fragment,a),us=E(a),W=f(a,"H2",{id:!0,"data-svelte-h":!0}),b(W)!=="svelte-17tr81j"&&(W.innerHTML=Ms),fs=E(a),V=f(a,"P",{"data-svelte-h":!0}),b(V)!=="svelte-1ozrwih"&&(V.textContent=Ps),ds=E(a),J=f(a,"BLOCKQUOTE",{"data-svelte-h":!0}),b(J)!=="svelte-1266vhe"&&(J.innerHTML=Ss),ms=E(a),F(Q.$$.fragment,a),Es=E(a),Y=f(a,"H2",{id:!0,"data-svelte-h":!0}),b(Y)!=="svelte-1tno2xe"&&(Y.innerHTML=Rs),$s=E(a),Z=f(a,"P",{"data-svelte-h":!0}),b(Z)!=="svelte-105wchc"&&(Z.innerHTML=Os),Fs=E(a),F(G.$$.fragment,a),gs=E(a),j=f(a,"H2",{id:!0,"data-svelte-h":!0}),b(j)!=="svelte-1d3ur3l"&&(j.innerHTML=Ws),hs=E(a),X=f(a,"P",{"data-svelte-h":!0}),b(X)!=="svelte-1qln8ku"&&(X.innerHTML=Ys),vs=E(a),ss=f(a,"P",{"data-svelte-h":!0}),b(ss)!=="svelte-m7mhx3"&&(ss.innerHTML=js),As=E(a),ns=f(a,"P",{"data-svelte-h":!0}),b(ns)!=="svelte-1fbr2gz"&&(ns.textContent=Is),bs=E(a),F(es.$$.fragment,a),ws=E(a),I=f(a,"H2",{id:!0,"data-svelte-h":!0}),b(I)!=="svelte-1uvuw7y"&&(I.innerHTML=Ks),xs=E(a),as=f(a,"P",{"data-svelte-h":!0}),b(as)!=="svelte-w8po3z"&&(as.innerHTML=Ns),ks=E(a),ls=f(a,"P",{"data-svelte-h":!0}),b(ls)!=="svelte-15wqf3t"&&(ls.innerHTML=qs),_s=E(a),F(ts.$$.fragment,a),this.h()},h(){S(s,"id","tutorial"),S(l,"id","first-steps"),S(H,"id","load-translations-from-files"),S(W,"id","multiple-languages"),S(Y,"id","interpolation"),S(j,"id","interpolation-formatting"),S(I,"id","custom-functions")},m(a,r){c(a,s,r),c(a,n,r),c(a,l,r),c(a,C,r),c(a,i,r),c(a,d,r),c(a,y,r),c(a,w,r),g(k,a,r),c(a,R,r),c(a,H,r),c(a,B,r),c(a,P,r),c(a,ys,r),c(a,q,r),c(a,Cs,r),g(U,a,r),c(a,us,r),c(a,W,r),c(a,fs,r),c(a,V,r),c(a,ds,r),c(a,J,r),c(a,ms,r),g(Q,a,r),c(a,Es,r),c(a,Y,r),c(a,$s,r),c(a,Z,r),c(a,Fs,r),g(G,a,r),c(a,gs,r),c(a,j,r),c(a,hs,r),c(a,X,r),c(a,vs,r),c(a,ss,r),c(a,As,r),c(a,ns,r),c(a,bs,r),g(es,a,r),c(a,ws,r),c(a,I,r),c(a,xs,r),c(a,as,r),c(a,ks,r),c(a,ls,r),c(a,_s,r),g(ts,a,r),Ls=!0},p:z,i(a){Ls||(h(k.$$.fragment,a),h(U.$$.fragment,a),h(Q.$$.fragment,a),h(G.$$.fragment,a),h(es.$$.fragment,a),h(ts.$$.fragment,a),Ls=!0)},o(a){v(k.$$.fragment,a),v(U.$$.fragment,a),v(Q.$$.fragment,a),v(G.$$.fragment,a),v(es.$$.fragment,a),v(ts.$$.fragment,a),Ls=!1},d(a){a&&(p(s),p(n),p(l),p(C),p(i),p(d),p(y),p(w),p(R),p(H),p(B),p(P),p(ys),p(q),p(Cs),p(us),p(W),p(fs),p(V),p(ds),p(J),p(ms),p(Es),p(Y),p($s),p(Z),p(Fs),p(gs),p(j),p(hs),p(X),p(vs),p(ss),p(As),p(ns),p(bs),p(ws),p(I),p(xs),p(as),p(ks),p(ls),p(_s)),A(k,a),A(U,a),A(Q,a),A(G,a),A(es,a),A(ts,a)}}}const Le=[{rank:1,text:"Tutorial",id:"tutorial"},{rank:2,text:"First steps",id:"first-steps"},{rank:2,text:"Load translations from files",id:"load-translations-from-files"},{rank:2,text:"Multiple languages",id:"multiple-languages"},{rank:2,text:"Interpolation",id:"interpolation"},{rank:2,text:"Interpolation formatting",id:"interpolation-formatting"},{rank:2,text:"Custom functions",id:"custom-functions"}];class Te extends L{constructor(s){super(),T(this,s,null,de,_,{})}}export{Te as P,Le as h};
