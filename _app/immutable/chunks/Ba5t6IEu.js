import"./NZTpNUN0.js";import"./i2H_t6st.js";import{p as D,c as i,h as y,an as d,f as _,a as S,t as R,b as T,s as a,d as t,r as p,aQ as k,e as q}from"./6SdbO3Am.js";import{h as L}from"./Bx9OllPX.js";import{R as l}from"./rMhOK0pF.js";import{F as C,b as P,i as u,d as B,c as h,E as m,f as I,g as j,h as H,j as U}from"./DuuaSmoD.js";import{i as f}from"./nz1HOwX-.js";function Y(e,n){D(n,!1);const s=new C("en");s.addResource(P),u(()=>h([s])),f(),B(e,{}),i()}const N=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">getFluentContext</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#D4D4D4"> { </span><span style="color:#4FC1FF">localize</span><span style="color:#D4D4D4"> } = </span><span style="color:#DCDCAA">getFluentContext</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">button</span><span style="color:#9CDCFE"> onclick</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">() </span><span style="color:#569CD6">=></span><span style="color:#9CDCFE"> window</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">prompt</span><span style="color:#D4D4D4">(</span><span style="color:#DCDCAA">localize</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'prompt'</span><span style="color:#D4D4D4">), </span><span style="color:#DCDCAA">localize</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'prompt.default'</span><span style="color:#D4D4D4">))</span><span style="color:#569CD6">}</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#D4D4D4">	Show prompt</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">button</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,O=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">prompt = </span><span style="color:#CE9178">Please enter your name</span></span>
<span class="line"><span style="color:#4EC9B0">	.default = </span><span style="color:#CE9178">Your name goes here</span></span>
<span class="line"></span></code></pre>`;function Q(e){{let n=d(()=>({"Component.svelte":{code:N,html:!0},"en.ftl":{code:O,html:!0}}));m(e,{get sources(){return y(n)},children:(s,o)=>{Y(s,{})},$$slots:{default:!0}})}}function V(e,n){D(n,!1);const s=new C("en");s.addResource(I),u(()=>h([s])),f(),j(e,{}),i()}const W=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">getFluentContext</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#D4D4D4"> { </span><span style="color:#4FC1FF">localize</span><span style="color:#D4D4D4"> } = </span><span style="color:#DCDCAA">getFluentContext</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> name</span><span style="color:#D4D4D4"> = </span><span style="color:#CE9178">'World'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">button</span><span style="color:#9CDCFE"> onclick</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">() </span><span style="color:#569CD6">=></span><span style="color:#9CDCFE"> window</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">alert</span><span style="color:#D4D4D4">(</span><span style="color:#DCDCAA">localize</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'hello'</span><span style="color:#D4D4D4">, { </span><span style="color:#9CDCFE">name</span><span style="color:#D4D4D4"> }))</span><span style="color:#569CD6">}</span><span style="color:#808080">></span><span style="color:#D4D4D4">Say hello</span><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">button</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,G=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hello, </span><span style="color:#569CD6">{</span><span style="color:#9CDCFE">$name</span><span style="color:#569CD6">}</span><span style="color:#CE9178">!</span></span>
<span class="line"></span></code></pre>`;function J(e){{let n=d(()=>({"Component.svelte":{code:W,html:!0},"en.ftl":{code:G,html:!0}}));m(e,{get sources(){return y(n)},children:(s,o)=>{V(s,{})},$$slots:{default:!0}})}}function K(e,n){D(n,!1);const s=new C("en");s.addResource(H),u(()=>h([s])),f(),U(e,{}),i()}const M=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">getFluentContext</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#D4D4D4"> { </span><span style="color:#4FC1FF">localize</span><span style="color:#D4D4D4"> } = </span><span style="color:#DCDCAA">getFluentContext</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">button</span><span style="color:#9CDCFE"> onclick</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">() </span><span style="color:#569CD6">=></span><span style="color:#9CDCFE"> window</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">alert</span><span style="color:#D4D4D4">(</span><span style="color:#DCDCAA">localize</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'hello'</span><span style="color:#D4D4D4">))</span><span style="color:#569CD6">}</span><span style="color:#808080">></span><span style="color:#D4D4D4">Say hello</span><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">button</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,X=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hello, world!</span></span>
<span class="line"></span></code></pre>`;function Z(e){{let n=d(()=>({"Component.svelte":{code:M,html:!0},"en.ftl":{code:X,html:!0}}));m(e,{get sources(){return y(n)},children:(s,o)=>{K(s,{})},$$slots:{default:!0}})}}const ss={title:"FluentContext"},{title:ns}=ss;var es=_(`<h1 id="title"> </h1> <p>The <code>FluentContext</code> object exposes localization functions via the svelte context.
Itâ€™s used internally by the <!> and <!> components.
It can also be retrieved with <!> and used directly.</p> <h2 id="fluentcontextlocalize"><a href="#fluentcontextlocalize">FluentContext.localize</a></h2> <p>The <code>FluentContext.localize</code> function allows you to use localizations in component scripts. This can be useful when interacting
with browser APIs or third-party libraries.</p> <blockquote><p>Using the <!> and <!> components is the
preferred way to localize your application with <code>svelte-fluent</code>.
The <code>FluentContext.localize</code> function provides additional flexibility in situations where using the components would not be
feasible.</p></blockquote> <!> <h3 id="parameters"><a href="#parameters">Parameters</a></h3> <div class="responsive-table"><table><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Default</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>id</code></td><td align="left"><code>string</code></td><td align="left"><code>undefined</code></td><td align="left">Unique identifier for the translation</td></tr><tr><td align="left"><code>args</code></td><td align="left"><code>Record&lt;string, FluentVariable&gt;</code></td><td align="left"><code>undefined</code></td><td align="left">Arguments for interpolation</td></tr></tbody></table></div> <h3 id="return-value"><a href="#return-value">Return value</a></h3> <p>The localized message as a <code>string</code>.</p> <h3 id="static-text-example"><a href="#static-text-example">Static text example</a></h3> <!> <h3 id="dynamic-text-with-variables-example"><a href="#dynamic-text-with-variables-example">Dynamic text with variables example</a></h3> <!> <h3 id="attributes-example"><a href="#attributes-example">Attributes example</a></h3> <blockquote><p>You can reference attributes of a translation message by calling <code>localize</code> with both identifiers joined with a period.</p> <p>In the example below this is done for the <code>.default</code> attribute of the <code>prompt</code> message by
calling <code>localize</code> with <code>'prompt.default'</code> as the message identifier.</p></blockquote> <!>`,1);function Ds(e){var n=es(),s=S(n),o=t(s,!0);p(s);var c=a(s,2),x=a(t(c),3);l(x,{name:"Localized"});var b=a(x,2);l(b,{name:"Overlay"});var w=a(b,2);l(w,{name:"getFluentContext"}),k(),p(c);var r=a(c,6),E=t(r),g=a(t(E));l(g,{name:"Localized"});var $=a(g,2);l($,{name:"getFluentContext"}),k(5),p(E),p(r);var F=a(r,2);L(F,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#569CD6">const</span><span style="color:#D4D4D4"> &#123; </span><span style="color:#4FC1FF">localize</span><span style="color:#D4D4D4"> &#125; = </span><span style="color:#DCDCAA">getFluentContext</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#569CD6">const</span><span style="color:#4FC1FF"> text</span><span style="color:#D4D4D4"> = </span><span style="color:#DCDCAA">localize</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">id</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">args</span><span style="color:#D4D4D4">);</span></span></code></pre>`);var v=a(F,12);Z(v);var A=a(v,4);J(A);var z=a(A,6);Q(z),R(()=>q(o,ns)),T(e,n)}export{Ds as _,ss as m};
