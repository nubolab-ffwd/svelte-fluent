import{a as $,t as L}from"./BLmdulVr.js";import"./CrF5dDxS.js";import{p as F,n as g,g as v,o as H,s as c,c as i,t as M,r as C,a0 as O,a1 as K,a2 as I,f as z,aw as _}from"./C7ybvbG6.js";import{s as N}from"./Pm9v8Z5x.js";import{b as U}from"./D4TWpRSF.js";import{R as x}from"./BFOvuVWP.js";import{F as m,a as f,b as h,c as A,E as b,f as j,h as T,j as B}from"./RBm6SzXJ.js";import{i as w}from"./9wtrq6xj.js";import{L as d}from"./sm3p1Cgt.js";import{b as q}from"./CT42DmWV.js";import{p as V,s as J}from"./Cb01ZQJJ.js";function G(e,s){F(s,!1);const n="hello = Hello, world!",a=new m("en");a.addResource(new f(n)),h(()=>A([a])),w(),d(e,{id:"hello"}),g()}const Q=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">FluentResource</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">createSvelteFluent</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">initFluentContext</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> translations</span><span style="color:#D4D4D4"> = </span><span style="color:#CE9178">'hello = Hello, world!'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#9CDCFE">	bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">translations</span><span style="color:#D4D4D4">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA">	initFluentContext</span><span style="color:#D4D4D4">(() </span><span style="color:#569CD6">=></span><span style="color:#DCDCAA"> createSvelteFluent</span><span style="color:#D4D4D4">([</span><span style="color:#9CDCFE">bundle</span><span style="color:#D4D4D4">]));</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"hello"</span><span style="color:#808080"> /></span></span>
<span class="line"></span></code></pre>`;function X(e){b(e,{sources:{"App.svelte":{code:Q,html:!0}},children:(s,n)=>{G(s,{})},$$slots:{default:!0}})}const Z=`hello = Hello, world!
`,ss=new f(Z);function ns(e,s){F(s,!1);const n=new m("en");n.addResource(ss),h(()=>A([n])),w(),d(e,{id:"hello"}),g()}const as=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">createSvelteFluent</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">initFluentContext</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> resourceEn</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './en.ftl'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#9CDCFE">	bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resourceEn</span><span style="color:#D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA">	initFluentContext</span><span style="color:#D4D4D4">(() </span><span style="color:#569CD6">=></span><span style="color:#DCDCAA"> createSvelteFluent</span><span style="color:#D4D4D4">([</span><span style="color:#9CDCFE">bundle</span><span style="color:#D4D4D4">]));</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"hello"</span><span style="color:#808080"> /></span></span>
<span class="line"></span></code></pre>`,ls=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hello, world!</span></span>
<span class="line"></span></code></pre>`;function es(e){b(e,{sources:{"App.svelte":{code:as,html:!0},"en.ftl":{code:ls,html:!0}},children:(s,n)=>{ns(s,{})},$$slots:{default:!0}})}const os="([a-z]{2,3}|\\*)",ps="(?:-([a-z]{4}|\\*))",ts="(?:-([a-z]{2}|\\*))",rs="(?:-(([0-9][a-z0-9]{3}|[a-z0-9]{5,8})|\\*))",cs=new RegExp(`^${os}${ps}?${ts}?${rs}?$`,"i");class k{constructor(s){const n=cs.exec(s.replace(/_/g,"-"));if(!n){this.isWellFormed=!1;return}let[,a,l,t,D]=n;a&&(this.language=a.toLowerCase()),l&&(this.script=l[0].toUpperCase()+l.slice(1)),t&&(this.region=t.toUpperCase()),this.variant=D,this.isWellFormed=!0}isEqual(s){return this.language===s.language&&this.script===s.script&&this.region===s.region&&this.variant===s.variant}matches(s,n=!1,a=!1){return(this.language===s.language||n&&this.language===void 0||a&&s.language===void 0)&&(this.script===s.script||n&&this.script===void 0||a&&s.script===void 0)&&(this.region===s.region||n&&this.region===void 0||a&&s.region===void 0)&&(this.variant===s.variant||n&&this.variant===void 0||a&&s.variant===void 0)}toString(){return[this.language,this.script,this.region,this.variant].filter(s=>s!==void 0).join("-")}clearVariants(){this.variant=void 0}clearRegion(){this.region=void 0}addLikelySubtags(){const s=ys(this.toString().toLowerCase());return s?(this.language=s.language,this.script=s.script,this.region=s.region,this.variant=s.variant,!0):!1}}const Y={ar:"ar-arab-eg","az-arab":"az-arab-ir","az-ir":"az-arab-ir",be:"be-cyrl-by",da:"da-latn-dk",el:"el-grek-gr",en:"en-latn-us",fa:"fa-arab-ir",ja:"ja-jpan-jp",ko:"ko-kore-kr",pt:"pt-latn-br",sr:"sr-cyrl-rs","sr-ru":"sr-latn-ru",sv:"sv-latn-se",ta:"ta-taml-in",uk:"uk-cyrl-ua",zh:"zh-hans-cn","zh-hant":"zh-hant-tw","zh-hk":"zh-hant-hk","zh-mo":"zh-hant-mo","zh-tw":"zh-hant-tw","zh-gb":"zh-hant-gb","zh-us":"zh-hant-us"},Ds=["az","bg","cs","de","es","fi","fr","hu","it","lt","lv","nl","pl","ro","ru"];function ys(e){if(Object.prototype.hasOwnProperty.call(Y,e))return new k(Y[e]);const s=new k(e);return s.language&&Ds.includes(s.language)?(s.region=s.language.toUpperCase(),s):null}function is(e,s,n){const a=new Set,l=new Map;for(let t of s)new k(t).isWellFormed&&l.set(t,new k(t));s:for(const t of e){const D=t.toLowerCase(),p=new k(D);if(p.language!==void 0){for(const o of l.keys())if(D===o.toLowerCase()){if(a.add(o),l.delete(o),n==="lookup")return Array.from(a);if(n==="filtering")continue;continue s}for(const[o,r]of l.entries())if(r.matches(p,!0,!1)){if(a.add(o),l.delete(o),n==="lookup")return Array.from(a);if(n==="filtering")continue;continue s}if(p.addLikelySubtags()){for(const[o,r]of l.entries())if(r.matches(p,!0,!1)){if(a.add(o),l.delete(o),n==="lookup")return Array.from(a);if(n==="filtering")continue;continue s}}p.clearVariants();for(const[o,r]of l.entries())if(r.matches(p,!0,!0)){if(a.add(o),l.delete(o),n==="lookup")return Array.from(a);if(n==="filtering")continue;continue s}if(p.clearRegion(),p.addLikelySubtags()){for(const[o,r]of l.entries())if(r.matches(p,!0,!1)){if(a.add(o),l.delete(o),n==="lookup")return Array.from(a);if(n==="filtering")continue;continue s}}p.clearRegion();for(const[o,r]of l.entries())if(r.matches(p,!0,!0)){if(a.add(o),l.delete(o),n==="lookup")return Array.from(a);if(n==="filtering")continue;continue s}}}return Array.from(a)}function Cs(e,s,{strategy:n="filtering",defaultLocale:a}={}){const l=is(Array.from(e??[]).map(String),Array.from(s??[]).map(String),n);if(n==="lookup"){if(a===void 0)throw new Error("defaultLocale cannot be undefined for strategy `lookup`");l.length===0&&l.push(a)}else a&&!l.includes(a)&&l.push(a);return l}const us=`hello = Hello, world!
`,ds=new f(us),fs=`hello = Hallo Welt!
`,Es=new f(fs),Fs=`hello = Salut le monde !
`,gs=new f(Fs);function ms(e,s){F(s,!0);let n=V(s,"selectedLocale",3,"");const a="en",l={en:ds,fr:gs,de:Es},t=Object.keys(l),D=H(()=>{const p=n()?[n()]:navigator.languages;return Cs(p,t,{defaultLocale:a,strategy:"lookup"}).map(r=>{const u=new m(r);return u.addResource(l[r]),u})});h(()=>A(v(D))),d(e,{id:"hello"}),g()}const hs=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">createSvelteFluent</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">initFluentContext</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">negotiateLanguages</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/langneg'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> resourceEn</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './en.ftl'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> resourceDe</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './de.ftl'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> resourceFr</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './fr.ftl'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955">	// this could be stored in a user profile or browser localStorage</span></span>
<span class="line"><span style="color:#569CD6">	let</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">selectedLocale</span><span style="color:#D4D4D4"> = </span><span style="color:#CE9178">''</span><span style="color:#D4D4D4"> } = $</span><span style="color:#DCDCAA">props</span><span style="color:#D4D4D4">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> defaultLocale</span><span style="color:#D4D4D4"> = </span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> resources</span><span style="color:#D4D4D4"> = {</span></span>
<span class="line"><span style="color:#9CDCFE">		en:</span><span style="color:#9CDCFE"> resourceEn</span><span style="color:#D4D4D4">,</span></span>
<span class="line"><span style="color:#9CDCFE">		fr:</span><span style="color:#9CDCFE"> resourceFr</span><span style="color:#D4D4D4">,</span></span>
<span class="line"><span style="color:#9CDCFE">		de:</span><span style="color:#9CDCFE"> resourceDe</span></span>
<span class="line"><span style="color:#D4D4D4">	};</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> supportedLocales</span><span style="color:#D4D4D4"> = </span><span style="color:#9CDCFE">Object</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">keys</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resources</span><span style="color:#D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundles</span><span style="color:#D4D4D4"> = $</span><span style="color:#9CDCFE">derived</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">by</span><span style="color:#D4D4D4">(() </span><span style="color:#569CD6">=></span><span style="color:#D4D4D4"> {</span></span>
<span class="line"><span style="color:#569CD6">		const</span><span style="color:#4FC1FF"> userLocales</span><span style="color:#D4D4D4"> = </span><span style="color:#9CDCFE">selectedLocale</span><span style="color:#D4D4D4"> ? [</span><span style="color:#9CDCFE">selectedLocale</span><span style="color:#D4D4D4">] : </span><span style="color:#9CDCFE">navigator</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">languages</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#6A9955">		// Choose locales that are best for the user.</span></span>
<span class="line"><span style="color:#569CD6">		const</span><span style="color:#4FC1FF"> selectedLocales</span><span style="color:#D4D4D4"> = </span><span style="color:#DCDCAA">negotiateLanguages</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">userLocales</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">supportedLocales</span><span style="color:#D4D4D4">, {</span></span>
<span class="line"><span style="color:#9CDCFE">			defaultLocale</span><span style="color:#D4D4D4">,</span></span>
<span class="line"><span style="color:#9CDCFE">			strategy:</span><span style="color:#CE9178"> 'lookup'</span></span>
<span class="line"><span style="color:#D4D4D4">		});</span></span>
<span class="line"><span style="color:#6A9955">		// prepare fluent bundles</span></span>
<span class="line"><span style="color:#C586C0">		return</span><span style="color:#9CDCFE"> selectedLocales</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">map</span><span style="color:#D4D4D4">((</span><span style="color:#9CDCFE">locale</span><span style="color:#D4D4D4">) </span><span style="color:#569CD6">=></span><span style="color:#D4D4D4"> {</span></span>
<span class="line"><span style="color:#569CD6">			const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">locale</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#9CDCFE">			bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resources</span><span style="color:#D4D4D4">[</span><span style="color:#9CDCFE">locale</span><span style="color:#D4D4D4">]);</span></span>
<span class="line"><span style="color:#C586C0">			return</span><span style="color:#9CDCFE"> bundle</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#D4D4D4">		});</span></span>
<span class="line"><span style="color:#D4D4D4">	});</span></span>
<span class="line"><span style="color:#DCDCAA">	initFluentContext</span><span style="color:#D4D4D4">(() </span><span style="color:#569CD6">=></span><span style="color:#DCDCAA"> createSvelteFluent</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">bundles</span><span style="color:#D4D4D4">));</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"hello"</span><span style="color:#808080"> /></span></span>
<span class="line"></span></code></pre>`,As=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hello, world!</span></span>
<span class="line"></span></code></pre>`,bs=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Salut le monde !</span></span>
<span class="line"></span></code></pre>`,vs=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hallo Welt!</span></span>
<span class="line"></span></code></pre>`;var ks=L('<dl class="svelte-74ye1h"><dt><label for="selected-locale">selectedLocale</label></dt> <dd><select id="selected-locale"><option>auto</option><option>de</option><option>en</option><option>fr</option></select></dd></dl>');function ws(e){const s=O({selectedLocale:""});b(e,{sources:{"App.svelte":{code:hs,html:!0},"en.ftl":{code:As,html:!0},"fr.ftl":{code:bs,html:!0},"de.ftl":{code:vs,html:!0}},controls:a=>{var l=ks(),t=c(i(l),2),D=i(t);M(()=>{v(s),I(()=>{})});var p=i(D);p.value=((p.__value="")==null,"");var o=c(p);o.value=(o.__value="de")==null?"":"de";var r=c(o);r.value=(r.__value="en")==null?"":"en";var u=c(r);u.value=(u.__value="fr")==null?"":"fr",C(D),C(t),C(l),q(D,()=>v(s).selectedLocale,y=>K(s,v(s).selectedLocale=y)),$(a,l)},children:(a,l)=>{ms(a,J(()=>v(s)))},$$slots:{controls:!0,default:!0}})}const xs=`hello = Hello, { $name }!
`,$s=new f(xs);function Ls(e,s){F(s,!1);const n=new m("en");n.addResource($s),h(()=>A([n])),w(),d(e,{id:"hello",args:{name:"everyone"}}),g()}const Ss=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">createSvelteFluent</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">initFluentContext</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> resourceEn</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './en.ftl'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#9CDCFE">	bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resourceEn</span><span style="color:#D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA">	initFluentContext</span><span style="color:#D4D4D4">(() </span><span style="color:#569CD6">=></span><span style="color:#DCDCAA"> createSvelteFluent</span><span style="color:#D4D4D4">([</span><span style="color:#9CDCFE">bundle</span><span style="color:#D4D4D4">]));</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"hello"</span><span style="color:#9CDCFE"> args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">name:</span><span style="color:#CE9178"> 'everyone'</span><span style="color:#D4D4D4"> }</span><span style="color:#569CD6">}</span><span style="color:#808080"> /></span></span>
<span class="line"></span></code></pre>`,_s=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hello, </span><span style="color:#569CD6">{</span><span style="color:#9CDCFE"> $name </span><span style="color:#569CD6">}</span><span style="color:#CE9178">!</span></span>
<span class="line"></span></code></pre>`;function Bs(e){b(e,{sources:{"App.svelte":{code:Ss,html:!0},"en.ftl":{code:_s,html:!0}},children:(s,n)=>{Ls(s,{})},$$slots:{default:!0}})}const zs=`dpi-ratio = Your DPI ratio is { NUMBER($ratio, minimumFractionDigits: 2) }
balance = Your account balance is { $balance }
today-is = Today is { DATETIME($date, month: "long", year: "numeric", day: "numeric") }
`,Rs=new f(zs);var Ws=L("<div><!></div> <div><!></div> <div><!></div>",1);function Ts(e,s){F(s,!1);const n=new m("en");n.addResource(Rs),h(()=>A([n])),w();var a=Ws(),l=z(a),t=i(l);d(t,{id:"dpi-ratio",args:{ratio:16/9}}),C(l);var D=c(l,2),p=i(D);d(p,{id:"balance",args:{balance:new j(1234.56,{style:"currency",currency:"USD"})}}),C(D);var o=c(D,2),r=i(o);d(r,{id:"today-is",args:{date:new Date}}),C(o),$(e,a),g()}const Ys=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">FluentNumber</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">createSvelteFluent</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">initFluentContext</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> resourceEn</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './en.ftl'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#9CDCFE">	bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resourceEn</span><span style="color:#D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA">	initFluentContext</span><span style="color:#D4D4D4">(() </span><span style="color:#569CD6">=></span><span style="color:#DCDCAA"> createSvelteFluent</span><span style="color:#D4D4D4">([</span><span style="color:#9CDCFE">bundle</span><span style="color:#D4D4D4">]));</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">div</span><span style="color:#808080">>&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"dpi-ratio"</span><span style="color:#9CDCFE"> args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">ratio:</span><span style="color:#B5CEA8"> 16</span><span style="color:#D4D4D4"> / </span><span style="color:#B5CEA8">9</span><span style="color:#D4D4D4"> }</span><span style="color:#569CD6">}</span><span style="color:#808080"> />&#x3C;/</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">	&#x3C;</span><span style="color:#4EC9B0">Localized</span></span>
<span class="line"><span style="color:#9CDCFE">		id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"balance"</span></span>
<span class="line"><span style="color:#9CDCFE">		args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">balance:</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> FluentNumber</span><span style="color:#D4D4D4">(</span><span style="color:#B5CEA8">1234.56</span><span style="color:#D4D4D4">, { </span><span style="color:#9CDCFE">style:</span><span style="color:#CE9178"> 'currency'</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">currency:</span><span style="color:#CE9178"> 'USD'</span><span style="color:#D4D4D4"> }) }</span><span style="color:#569CD6">}</span></span>
<span class="line"><span style="color:#808080">	/></span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">div</span><span style="color:#808080">>&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"today-is"</span><span style="color:#9CDCFE"> args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">date:</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> Date</span><span style="color:#D4D4D4">() }</span><span style="color:#569CD6">}</span><span style="color:#808080"> />&#x3C;/</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,js=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">dpi-ratio = </span><span style="color:#CE9178">Your DPI ratio is </span><span style="color:#569CD6">{</span><span style="color:#DCDCAA"> NUMBER(</span><span style="color:#9CDCFE">$ratio</span><span style="color:#DCDCAA">,</span><span style="color:#DCDCAA"> minimumFractionDigits:</span><span style="color:#9CDCFE"> 2</span><span style="color:#DCDCAA">)</span><span style="color:#569CD6"> }</span></span>
<span class="line"><span style="color:#4EC9B0">balance = </span><span style="color:#CE9178">Your account balance is </span><span style="color:#569CD6">{</span><span style="color:#9CDCFE"> $balance </span><span style="color:#569CD6">}</span></span>
<span class="line"><span style="color:#4EC9B0">today-is = </span><span style="color:#CE9178">Today is </span><span style="color:#569CD6">{</span><span style="color:#DCDCAA"> DATETIME(</span><span style="color:#9CDCFE">$date</span><span style="color:#DCDCAA">,</span><span style="color:#DCDCAA"> month:</span><span style="color:#9CDCFE"> "long"</span><span style="color:#DCDCAA">,</span><span style="color:#DCDCAA"> year:</span><span style="color:#9CDCFE"> "numeric"</span><span style="color:#DCDCAA">,</span><span style="color:#DCDCAA"> day:</span><span style="color:#9CDCFE"> "numeric"</span><span style="color:#DCDCAA">)</span><span style="color:#569CD6"> }</span></span>
<span class="line"></span></code></pre>`;function Ps(e){b(e,{sources:{"App.svelte":{code:Ys,html:!0},"en.ftl":{code:js,html:!0}},children:(s,n)=>{Ts(s,{})},$$slots:{default:!0}})}const Hs=`weekday-number = Weekday { $weekday } is { WEEKDAY($weekday) }
weekday-date = Weekday of { $date } is { WEEKDAY($date) }
`,Ms=new f(Hs);var Os=L("<div><!></div> <div><!></div>",1);function Ks(e,s){F(s,!1);function n(r,u){const y=r[0];if(y instanceof T)return new T(`WEEKDAY(${y.valueOf()})`);if(y instanceof j){const E=new Date(Date.now()),S=y.valueOf()-E.getDay();return E.setDate(E.getDate()+S),new B(E.valueOf(),{weekday:"long"})}if(y instanceof B)return new B(y.valueOf(),{weekday:"long"});throw new TypeError("Invalid argument to WEEKDAY")}const a=new m("en",{functions:{WEEKDAY:n}});a.addResource(Ms),h(()=>A([a])),w();var l=Os(),t=z(l),D=i(t);d(D,{id:"weekday-number",args:{weekday:2}}),C(t);var p=c(t,2),o=i(p);d(o,{id:"weekday-date",args:{date:new Date(2024,1,6)}}),C(p),$(e,l),g()}const Is=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">FluentDateTime</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">FluentNone</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">FluentNumber</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">createSvelteFluent</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">initFluentContext</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> resourceEn</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './en.ftl'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955">	// eslint-disable-next-line @typescript-eslint/no-unused-vars</span></span>
<span class="line"><span style="color:#569CD6">	function</span><span style="color:#DCDCAA"> WEEKDAY</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">args</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">opts</span><span style="color:#D4D4D4">) {</span></span>
<span class="line"><span style="color:#569CD6">		const</span><span style="color:#4FC1FF"> arg</span><span style="color:#D4D4D4"> = </span><span style="color:#9CDCFE">args</span><span style="color:#D4D4D4">[</span><span style="color:#B5CEA8">0</span><span style="color:#D4D4D4">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">		if</span><span style="color:#D4D4D4"> (</span><span style="color:#9CDCFE">arg</span><span style="color:#569CD6"> instanceof</span><span style="color:#4EC9B0"> FluentNone</span><span style="color:#D4D4D4">) {</span></span>
<span class="line"><span style="color:#C586C0">			return</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> FluentNone</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">\`WEEKDAY(</span><span style="color:#569CD6">\${</span><span style="color:#9CDCFE">arg</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">valueOf</span><span style="color:#D4D4D4">()</span><span style="color:#569CD6">}</span><span style="color:#CE9178">)\`</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#D4D4D4">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">		if</span><span style="color:#D4D4D4"> (</span><span style="color:#9CDCFE">arg</span><span style="color:#569CD6"> instanceof</span><span style="color:#4EC9B0"> FluentNumber</span><span style="color:#D4D4D4">) {</span></span>
<span class="line"><span style="color:#569CD6">			const</span><span style="color:#4FC1FF"> date</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> Date</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">Date</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">now</span><span style="color:#D4D4D4">());</span></span>
<span class="line"><span style="color:#569CD6">			const</span><span style="color:#4FC1FF"> offset</span><span style="color:#D4D4D4"> = </span><span style="color:#9CDCFE">arg</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">valueOf</span><span style="color:#D4D4D4">() - </span><span style="color:#9CDCFE">date</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">getDay</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#9CDCFE">			date</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">setDate</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">date</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">getDate</span><span style="color:#D4D4D4">() + </span><span style="color:#9CDCFE">offset</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#C586C0">			return</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> FluentDateTime</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">date</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">valueOf</span><span style="color:#D4D4D4">(), {</span></span>
<span class="line"><span style="color:#9CDCFE">				weekday:</span><span style="color:#CE9178"> 'long'</span></span>
<span class="line"><span style="color:#D4D4D4">			});</span></span>
<span class="line"><span style="color:#D4D4D4">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">		if</span><span style="color:#D4D4D4"> (</span><span style="color:#9CDCFE">arg</span><span style="color:#569CD6"> instanceof</span><span style="color:#4EC9B0"> FluentDateTime</span><span style="color:#D4D4D4">) {</span></span>
<span class="line"><span style="color:#C586C0">			return</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> FluentDateTime</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">arg</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">valueOf</span><span style="color:#D4D4D4">(), {</span></span>
<span class="line"><span style="color:#9CDCFE">				weekday:</span><span style="color:#CE9178"> 'long'</span></span>
<span class="line"><span style="color:#D4D4D4">			});</span></span>
<span class="line"><span style="color:#D4D4D4">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">		throw</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> TypeError</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'Invalid argument to WEEKDAY'</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#D4D4D4">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">, { </span><span style="color:#9CDCFE">functions:</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">WEEKDAY</span><span style="color:#D4D4D4"> } });</span></span>
<span class="line"><span style="color:#9CDCFE">	bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resourceEn</span><span style="color:#D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA">	initFluentContext</span><span style="color:#D4D4D4">(() </span><span style="color:#569CD6">=></span><span style="color:#DCDCAA"> createSvelteFluent</span><span style="color:#D4D4D4">([</span><span style="color:#9CDCFE">bundle</span><span style="color:#D4D4D4">]));</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">	&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"weekday-number"</span><span style="color:#9CDCFE"> args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">weekday:</span><span style="color:#B5CEA8"> 2</span><span style="color:#D4D4D4"> }</span><span style="color:#569CD6">}</span><span style="color:#808080"> /></span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">	&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"weekday-date"</span><span style="color:#9CDCFE"> args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">date:</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> Date</span><span style="color:#D4D4D4">(</span><span style="color:#B5CEA8">2024</span><span style="color:#D4D4D4">, </span><span style="color:#B5CEA8">1</span><span style="color:#D4D4D4">, </span><span style="color:#B5CEA8">6</span><span style="color:#D4D4D4">) }</span><span style="color:#569CD6">}</span><span style="color:#808080"> /></span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,Ns=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">weekday-number = </span><span style="color:#CE9178">Weekday </span><span style="color:#569CD6">{</span><span style="color:#9CDCFE"> $weekday </span><span style="color:#569CD6">}</span><span style="color:#CE9178"> is </span><span style="color:#569CD6">{</span><span style="color:#DCDCAA"> WEEKDAY(</span><span style="color:#9CDCFE">$weekday</span><span style="color:#DCDCAA">)</span><span style="color:#569CD6"> }</span></span>
<span class="line"><span style="color:#4EC9B0">weekday-date = </span><span style="color:#CE9178">Weekday of </span><span style="color:#569CD6">{</span><span style="color:#9CDCFE"> $date </span><span style="color:#569CD6">}</span><span style="color:#CE9178"> is </span><span style="color:#569CD6">{</span><span style="color:#DCDCAA"> WEEKDAY(</span><span style="color:#9CDCFE">$date</span><span style="color:#DCDCAA">)</span><span style="color:#569CD6"> }</span></span>
<span class="line"></span></code></pre>`;function Us(e){b(e,{sources:{"App.svelte":{code:Is,html:!0},"en.ftl":{code:Ns,html:!0}},children:(s,n)=>{Ks(s,{})},$$slots:{default:!0}})}const on=[{rank:1,text:"Tutorial",id:"tutorial"},{rank:2,text:"First steps",id:"first-steps"},{rank:2,text:"Load translations from files",id:"load-translations-from-files"},{rank:2,text:"Multiple languages",id:"multiple-languages"},{rank:2,text:"Interpolation",id:"interpolation"},{rank:2,text:"Interpolation formatting",id:"interpolation-formatting"},{rank:2,text:"Custom functions",id:"custom-functions"}];var qs=L(`<h1 id="tutorial">Tutorial</h1> <h2 id="first-steps"><a href="#first-steps">First steps</a></h2> <p>You need to provide your translations to <code>svelte-fluent</code> by creating a <!> object
and initializing the <!>.</p> <p>In the most basic setup those translations can be defined directly in the code like this:</p> <!> <h2 id="load-translations-from-files"><a href="#load-translations-from-files">Load translations from files</a></h2> <p>Managing translations directly in the code can get messy.
A better way is to load translations from <code>.ftl</code> files.</p> <!> <h2 id="multiple-languages"><a href="#multiple-languages">Multiple languages</a></h2> <p>We can now extend this to multiple languages. Let’s add a selection for the
desired language and fallback to the auto-detected language of the browser.</p> <blockquote><p>This example will fail when used with server-side rendering (SSR) because during
SSR the component cannot use browser-only globals like <code>navigator.languages</code>.</p> <p>As an alternative that works in SSR you can parse the <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Language" rel="noopener noreferrer" target="_blank">HTTP Accept-Language header</a> and replace <code>navigator.languages</code> with the resulting list of locale identifiers.</p> <p>Check out the <a>SvelteKit integration guide</a> for an example how to do this.</p></blockquote> <!> <h2 id="interpolation"><a href="#interpolation">Interpolation</a></h2> <p>You can insert variables into your translated text by using <a href="https://projectfluent.org/fluent/guide/placeables.html" rel="noopener noreferrer" target="_blank">Fluent Placeables</a>.
Values for those variables are provided via the <code>args</code> prop of the <!> and <!> components.</p> <!> <h2 id="interpolation-formatting"><a href="#interpolation-formatting">Interpolation formatting</a></h2> <p>Fluent outputs interpolations in a human readable format appropriate to the currently used locale.
You can customize the formatting by using <a href="https://projectfluent.org/fluent/guide/functions.html" rel="noopener noreferrer" target="_blank">Fluent Functions</a>.</p> <p>Formatting parameters listed in “Parameters” in the <a href="https://projectfluent.org/fluent/guide/functions.html" rel="noopener noreferrer" target="_blank">Fluent Functions</a> documentation can be set both in the <code>.ftl</code> files or in the JS source.</p> <p>Parameters listed in “Developer parameters” can only be set in JS code.</p> <!> <h2 id="custom-functions"><a href="#custom-functions">Custom functions</a></h2> <p>You can extend the default <a href="https://projectfluent.org/fluent/guide/functions.html" rel="noopener noreferrer" target="_blank">Fluent Functions</a> with custom formatting functions by adding them to the <code>functions</code> option of <code>FluentBundle</code>.</p> <p>You can also check out the <a href="https://github.com/projectfluent/fluent.js/blob/master/fluent-bundle/src/builtins.ts" rel="noopener noreferrer" target="_blank">code of the built-in Fluent Functions</a> for more examples.</p> <!>`,1);function pn(e){var s=qs(),n=c(z(s),4),a=c(i(n),3);x(a,{name:"SvelteFluent"});var l=c(a,2);x(l,{name:"FluentContext"}),_(),C(n);var t=c(n,4);X(t);var D=c(t,6);es(D);var p=c(D,6),o=c(i(p),4),r=c(i(o));N(r,"href",`${U??""}/docs/integration#sveltekit`),_(),C(o),C(p);var u=c(p,2);ws(u);var y=c(u,4),E=c(i(y),5);x(E,{name:"Localized"});var S=c(E,2);x(S,{name:"Overlay"}),_(),C(y);var R=c(y,2);Bs(R);var W=c(R,10);Ps(W);var P=c(W,8);Us(P),$(e,s)}export{pn as _,on as h};
