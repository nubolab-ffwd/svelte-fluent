import{a as c,t as i,c as S}from"./disclose-version.B3vtwSbd.js";import{m as L,d as R,k as M,w as P,aN as B,p as C,a as b,c as m,f as w,r as y,g as d,n as j,s as h,ao as U,aq as z,ar as I}from"./runtime.BG2WyBbu.js";import{g as q,a as E,F as k,b as N,c as O,E as A}from"./Overlay.svelte_svelte_type_style_lang.BaMt7AUn.js";import{i as H}from"./lifecycle.DT0HG74C.js";import{i as V}from"./if.BLxNI_Cw.js";import{s as X}from"./snippet.CgVHs_Xd.js";import{r as Y}from"./attributes.FMsm8o_4.js";import{b as W}from"./input.BOj8-wNC.js";import{p as $,s as Z}from"./props.mPnHdJQw.js";function G(t,e,n){L(()=>{var a=R(()=>e(t,n==null?void 0:n())||{});if(n&&(a!=null&&a.update)){var o=!1,r={};M(()=>{var s=n();P(s),o&&B(r,s)&&(r=s,a.update(s))}),o=!0}if(a!=null&&a.destroy)return()=>a.destroy()})}const J=/<|&#?\w+;/,K={"http://www.w3.org/1999/xhtml":["em","strong","small","s","cite","q","dfn","abbr","data","time","code","var","samp","kbd","sub","sup","i","b","u","mark","bdi","bdo","span","br","wbr"]},Q={"http://www.w3.org/1999/xhtml":{global:["title","aria-label","aria-valuetext"],a:["download"],area:["download","alt"],input:["alt","placeholder"],menuitem:["label"],menu:["label"],optgroup:["label"],option:["label"],track:["label"],img:["alt"],textarea:["placeholder"],th:["abbr"]},"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul":{global:["accesskey","aria-label","aria-valuetext","label","title","tooltiptext"],description:["value"],key:["key","keycode"],label:["value"],textbox:["placeholder","value"]}};function ee(t,e){const{value:n}=e;if(typeof n=="string")if(t.localName==="title"&&t.namespaceURI==="http://www.w3.org/1999/xhtml")t.textContent=n;else if(!J.test(n))t.textContent=n;else{const a=t.ownerDocument.createElementNS("http://www.w3.org/1999/xhtml","template");a.innerHTML=n,te(a.content,t)}T(e,t)}function te(t,e){for(const n of t.childNodes)if(n.nodeType!==n.TEXT_NODE){if(n.hasAttribute("data-l10n-name")){const a=ne(e,n);t.replaceChild(a,n);continue}if(oe(n)){const a=se(n);t.replaceChild(a,n);continue}console.warn(`An element of forbidden type "${n.localName}" was found in the translation. Only safe text-level elements and elements with data-l10n-name are allowed.`),t.replaceChild(D(n),n)}e.textContent="",e.appendChild(t)}function ae(t,e){if(!t)return!1;for(let n of t)if(n.name===e)return!0;return!1}function T(t,e){const n=e.hasAttribute("data-l10n-attrs")?e.getAttribute("data-l10n-attrs").split(",").map(a=>a.trim()):null;for(const a of Array.from(e.attributes))x(a.name,e,n)&&!ae(t.attributes,a.name)&&e.removeAttribute(a.name);if(t.attributes)for(const a of Array.from(t.attributes))x(a.name,e,n)&&e.getAttribute(a.name)!==a.value&&e.setAttribute(a.name,a.value)}function ne(t,e){const n=e.getAttribute("data-l10n-name"),a=t.querySelector(`[data-l10n-name="${n}"]`);if(!a)return console.warn(`An element named "${n}" wasn't found in the source.`),D(e);if(a.localName!==e.localName)return console.warn(`An element named "${n}" was found in the translation but its type ${e.localName} didn't match the element found in the source (${a.localName}).`),D(e);t.removeChild(a);const o=a.cloneNode(!1);return _(e,o)}function se(t){const e=t.ownerDocument.createElement(t.localName);return _(t,e)}function D(t){return t.ownerDocument.createTextNode(t.textContent)}function oe(t){const e=K[t.namespaceURI];return e&&e.includes(t.localName)}function x(t,e,n=null){if(n&&n.includes(t))return!0;const a=Q[e.namespaceURI];if(!a)return!1;const o=t.toLowerCase(),r=e.localName;if(a.global.includes(o))return!0;if(!a[r])return!1;if(a[r].includes(o))return!0;if(e.namespaceURI==="http://www.w3.org/1999/xhtml"&&r==="input"&&o==="value"){const s=e.type.toLowerCase();if(s==="submit"||s==="button"||s==="reset")return!0}return!1}function _(t,e){return e.textContent=t.textContent,T(t,e),e}var le=i('<div class="svelte-1igvztv"><!></div>');function F(t,e){C(e,!0);const{getTranslation:n}=q(),a=(s,p)=>{let l=s;function u(g){if(g){const f=s.cloneNode(!0);ee(f,g),l!=null&&l.parentNode&&l.parentNode.replaceChild(f,l),l=f}}u(p);const v=new MutationObserver(()=>{u(p)});return v.observe(s,{attributes:!0,characterData:!0,childList:!0,subtree:!0}),{update:u,destroy:()=>{v.disconnect(),s&&(l!=null&&l.parentNode)&&l.parentNode.replaceChild(s,l)}}};var o=le(),r=m(o);V(r,()=>e.children,s=>{var p=S(),l=w(p);X(l,()=>e.children),c(s,p)}),y(o),G(o,(s,p)=>a(s,p),()=>n(e.id,e.args,!0)),c(t,o),b()}const re=`info = Read the <a data-l10n-name="link">documentation</a> for more information.
`,pe=new E(re);var ce=i('<a data-l10n-name="link" href="https://example.com/"></a>');function ie(t){F(t,{id:"info",children:(e,n)=>{var a=ce();c(e,a)},$$slots:{default:!0}})}function de(t,e){C(e,!1);const n=new k("en");n.addResource(pe),N(()=>O([n])),H(),ie(t),b()}const ue=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">Overlay</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#4EC9B0">Overlay</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"info"</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">	&#x3C;</span><span style="color:#569CD6">a</span><span style="color:#9CDCFE"> data-l10n-name</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"link"</span><span style="color:#9CDCFE"> href</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"https://example.com/"</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#6A9955">		&#x3C;!-- text from FTL file gets inserted here --></span></span>
<span class="line"><span style="color:#808080">	&#x3C;/</span><span style="color:#569CD6">a</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#4EC9B0">Overlay</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,fe=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">info = </span><span style="color:#CE9178">Read the &#x3C;a data-l10n-name="link">documentation&#x3C;/a> for more information.</span></span>
<span class="line"></span></code></pre>`;function me(t){A(t,{sources:{"Component.svelte":{code:ue,html:!0},"en.ftl":{code:fe,html:!0}},children:(e,n)=>{de(e,{})},$$slots:{default:!0}})}const ye=`info =
  You can download "{ $productName }" by clicking
  on the <strong>Download</strong> button or read
  the <a data-l10n-name='release-notes'>release notes</a> to learn more.
`,he=new E(ye);var De=i('<a data-l10n-name="release-notes" href="https://example.com/" target="_blank" rel="noreferrer"></a>');function Ce(t,e){let n=$(e,"productName",3,"Example Product");var a=j(()=>({productName:n()}));F(t,{id:"info",get args(){return d(a)},children:(o,r)=>{var s=De();c(o,s)},$$slots:{default:!0}})}function be(t,e){C(e,!0);let n=$(e,"productName",3,"Example Product");const a=new k("en");a.addResource(he),N(()=>O([a])),Ce(t,{get productName(){return n()}}),b()}const ve=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">Overlay</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#569CD6">	let</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">productName</span><span style="color:#D4D4D4"> = </span><span style="color:#CE9178">'Example Product'</span><span style="color:#D4D4D4"> } = $</span><span style="color:#DCDCAA">props</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#4EC9B0">Overlay</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"info"</span><span style="color:#9CDCFE"> args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">productName</span><span style="color:#D4D4D4"> }</span><span style="color:#569CD6">}</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">	&#x3C;</span><span style="color:#569CD6">a</span><span style="color:#9CDCFE"> data-l10n-name</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"release-notes"</span><span style="color:#9CDCFE"> href</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"https://example.com/"</span><span style="color:#9CDCFE"> target</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"_blank"</span><span style="color:#9CDCFE"> rel</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"noreferrer"</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#6A9955">		&#x3C;!-- text from FTL file gets inserted here --></span></span>
<span class="line"><span style="color:#808080">	&#x3C;/</span><span style="color:#569CD6">a</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#4EC9B0">Overlay</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,ge=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">info =</span></span>
<span class="line"><span style="color:#CE9178">  You can download "</span><span style="color:#569CD6">{</span><span style="color:#9CDCFE"> $productName </span><span style="color:#569CD6">}</span><span style="color:#CE9178">" by clicking</span></span>
<span class="line"><span style="color:#CE9178">  on the &#x3C;strong>Download&#x3C;/strong> button or read</span></span>
<span class="line"><span style="color:#CE9178">  the &#x3C;a data-l10n-name='release-notes'>release notes&#x3C;/a> to learn more.</span></span>
<span class="line"></span></code></pre>`;var xe=i('<dl><dt><label for="overlay-dynamic-text-product-name">productName</label></dt> <dd><input id="overlay-dynamic-text-product-name"></dd></dl>');function we(t){const e=U({productName:"Example Product"});A(t,{sources:{"Component.svelte":{code:ve,html:!0},"en.ftl":{code:ge,html:!0}},controls:a=>{var o=xe(),r=h(m(o),2),s=m(r);Y(s),y(r),y(o),W(s,()=>d(e).productName,p=>z(e,d(e).productName=p)),c(a,o)},children:(a,o)=>{be(a,Z(()=>d(e)))},$$slots:{controls:!0,default:!0}})}const Ee={title:"Overlay (experimental)",menuTitle:"Overlay"},{title:ke,menuTitle:Me}=Ee;var Ne=i(`<h1 id="title"></h1> <p>The experimental Overlay component uses <a href="https://github.com/projectfluent/fluent.js/wiki/DOM-Overlays" rel="noopener noreferrer" target="_blank">fluent.js DOM Overlays</a> to render translation messages that contain HTML markup.</p> <p>DOM overlays provide a safe mechanism for translators to use text-level markup.
They also allow developers to provide functional elements that can be used in translations.</p> <p>Please check the <a href="https://github.com/projectfluent/fluent.js/wiki/DOM-Overlays" rel="noopener noreferrer" target="_blank">fluent.js documentation for DOM Overlays</a> if you want to learn more.</p> <p>Due to the way DOM Overlays are currently implemented in <code>svelte-fluent</code> there are some additional limitations
to the <a href="https://github.com/projectfluent/fluent.js/wiki/DOM-Overlays#limitations" rel="noopener noreferrer" target="_blank">limitations listed in the @fluent/dom wiki</a>:</p> <ul><li>Updates to <code>&lt;Overlay/&gt;</code> component props and children cause a high overhead and should be minimized</li> <li>Svelte actions (<code>&lt;tag use:someaction/&gt;</code>) won’t work correctly for children of the <code>&lt;Overlay/&gt;</code> component</li> <li>Svelte transitions/animations (<code>&lt;tag transition:fade /&gt;</code>) won’t work correctly for children of the <code>&lt;Overlay/&gt;</code> component</li> <li>Svelte bindings (<code>&lt;tag bind:clientWidth=&#123;something&#125; /&gt;</code>) won’t work correctly for children of the <code>&lt;Overlay/&gt;</code> component</li> <li>Event handlers (<code>&lt;tag onclick=&#123;handleClick&#125; /&gt;</code>) bound on children of the <code>&lt;Overlay/&gt;</code> component will not fire</li></ul> <h2 id="snippets"><a href="#snippets">Snippets</a></h2> <div class="responsive-table"><table><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>children</code></td><td align="left"><code>Snippet</code></td><td align="left">Defines the markup the Overlay is applied upon</td></tr></tbody></table></div> <h2 id="static-text-example"><a href="#static-text-example">Static text example</a></h2> <!> <h2 id="dynamic-text-with-variables-example"><a href="#dynamic-text-with-variables-example">Dynamic text with variables example</a></h2> <!> <h2 id="props"><a href="#props">Props</a></h2> <div class="responsive-table"><table><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Default</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>id</code></td><td align="left"><code>string</code></td><td align="left"><code>undefined</code></td><td align="left">Unique identifier for the translation</td></tr><tr><td align="left"><code>args</code></td><td align="left"><code>Record&lt;string, FluentVariable&gt;</code></td><td align="left"><code>undefined</code></td><td align="left">Arguments for interpolation</td></tr></tbody></table></div>`,1);function Pe(t){var e=Ne(),n=w(e);n.textContent=ke;var a=h(n,18);me(a);var o=h(a,4);we(o),I(4),c(t,e)}export{Pe as _,Ee as m};
