import{f as u,a as i,t as D}from"./disclose-version.BCWSd2dK.js";import"./legacy.CGfnRA7o.js";import{p as l,a as t,f as R,s as a,c as y,au as A,r as C}from"./runtime.CtoP0lCI.js";import{h as P}from"./html.DFRMOxZf.js";import{R as r}from"./ReferenceLink.BITJFfSN.js";import{a as h,d as m,F as f,b,c as x,E}from"./fluent.DuU4JSFJ.js";import{i as p}from"./lifecycle.BRpxvXZ_.js";const q=`hello = Hello, world!
`,T=new h(q);var B=(n,s)=>window.alert(s("hello")),H=D("<button>Say hello</button>");function I(n,s){l(s,!1);const{localize:o}=m();p();var e=H();e.__click=[B,o],i(n,e),t()}u(["click"]);function L(n,s){l(s,!1);const o=new f("en");o.addResource(T),b(()=>x([o])),p(),I(n,{}),t()}const Y=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">getFluentContext</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#D4D4D4"> { </span><span style="color:#4FC1FF">localize</span><span style="color:#D4D4D4"> } = </span><span style="color:#DCDCAA">getFluentContext</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">button</span><span style="color:#9CDCFE"> onclick</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">() </span><span style="color:#569CD6">=></span><span style="color:#9CDCFE"> window</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">alert</span><span style="color:#D4D4D4">(</span><span style="color:#DCDCAA">localize</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'hello'</span><span style="color:#D4D4D4">))</span><span style="color:#569CD6">}</span><span style="color:#808080">></span><span style="color:#D4D4D4">Say hello</span><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">button</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,j=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hello, world!</span></span>
<span class="line"></span></code></pre>`;function U(n){E(n,{sources:{"Component.svelte":{code:Y,html:!0},"en.ftl":{code:j,html:!0}},children:(s,o)=>{L(s,{})},$$slots:{default:!0}})}const W=`hello = Hello, {$name}!
`,N=new h(W);var O=(n,s,o)=>window.alert(s("hello",{name:o})),V=D("<button>Say hello</button>");function G(n,s){l(s,!1);const{localize:o}=m(),e="World";p();var c=V();c.__click=[O,o,e],i(n,c),t()}u(["click"]);function J(n,s){l(s,!1);const o=new f("en");o.addResource(N),b(()=>x([o])),p(),G(n,{}),t()}const K=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">getFluentContext</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#D4D4D4"> { </span><span style="color:#4FC1FF">localize</span><span style="color:#D4D4D4"> } = </span><span style="color:#DCDCAA">getFluentContext</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> name</span><span style="color:#D4D4D4"> = </span><span style="color:#CE9178">'World'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">button</span><span style="color:#9CDCFE"> onclick</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">() </span><span style="color:#569CD6">=></span><span style="color:#9CDCFE"> window</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">alert</span><span style="color:#D4D4D4">(</span><span style="color:#DCDCAA">localize</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'hello'</span><span style="color:#D4D4D4">, { </span><span style="color:#9CDCFE">name</span><span style="color:#D4D4D4"> }))</span><span style="color:#569CD6">}</span><span style="color:#808080">></span><span style="color:#D4D4D4">Say hello</span><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">button</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,M=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hello, </span><span style="color:#569CD6">{</span><span style="color:#9CDCFE">$name</span><span style="color:#569CD6">}</span><span style="color:#CE9178">!</span></span>
<span class="line"></span></code></pre>`;function Q(n){E(n,{sources:{"Component.svelte":{code:K,html:!0},"en.ftl":{code:M,html:!0}},children:(s,o)=>{J(s,{})},$$slots:{default:!0}})}const X=`prompt = Please enter your name
	.default = Your name goes here
`,Z=new h(X);var ss=(n,s)=>window.prompt(s("prompt"),s("prompt.default")),ns=D("<button>Show prompt</button>");function os(n,s){l(s,!1);const{localize:o}=m();p();var e=ns();e.__click=[ss,o],i(n,e),t()}u(["click"]);function es(n,s){l(s,!1);const o=new f("en");o.addResource(Z),b(()=>x([o])),p(),os(n,{}),t()}const as=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">getFluentContext</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#D4D4D4"> { </span><span style="color:#4FC1FF">localize</span><span style="color:#D4D4D4"> } = </span><span style="color:#DCDCAA">getFluentContext</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">button</span><span style="color:#9CDCFE"> onclick</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">() </span><span style="color:#569CD6">=></span><span style="color:#9CDCFE"> window</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">prompt</span><span style="color:#D4D4D4">(</span><span style="color:#DCDCAA">localize</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'prompt'</span><span style="color:#D4D4D4">), </span><span style="color:#DCDCAA">localize</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'prompt.default'</span><span style="color:#D4D4D4">))</span><span style="color:#569CD6">}</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#D4D4D4">	Show prompt</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">button</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,ls=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">prompt = </span><span style="color:#CE9178">Please enter your name</span></span>
<span class="line"><span style="color:#4EC9B0">	.default = </span><span style="color:#CE9178">Your name goes here</span></span>
<span class="line"></span></code></pre>`;function ts(n){E(n,{sources:{"Component.svelte":{code:as,html:!0},"en.ftl":{code:ls,html:!0}},children:(s,o)=>{es(s,{})},$$slots:{default:!0}})}const ps={title:"FluentContext"},{title:cs}=ps;var rs=D(`<h1 id="title"></h1> <p>The <code>FluentContext</code> object exposes localization functions via the svelte context.
Itâ€™s used internally by the <!> and <!> components.
It can also be retrieved with <!> and used directly.</p> <h2 id="fluentcontextlocalize"><a href="#fluentcontextlocalize">FluentContext.localize</a></h2> <p>The <code>FluentContext.localize</code> function allows you to use localizations in component scripts. This can be useful when interacting
with browser APIs or third-party libraries.</p> <blockquote><p>Using the <!> and <!> components is the
preferred way to localize your application with <code>svelte-fluent</code>.
The <code>FluentContext.localize</code> function provides additional flexibility in situations where using the components would not be
feasible.</p></blockquote> <!> <h3 id="parameters"><a href="#parameters">Parameters</a></h3> <div class="responsive-table"><table><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Default</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>id</code></td><td align="left"><code>string</code></td><td align="left"><code>undefined</code></td><td align="left">Unique identifier for the translation</td></tr><tr><td align="left"><code>args</code></td><td align="left"><code>Record&lt;string, FluentVariable&gt;</code></td><td align="left"><code>undefined</code></td><td align="left">Arguments for interpolation</td></tr></tbody></table></div> <h3 id="return-value"><a href="#return-value">Return value</a></h3> <p>The localized message as a <code>string</code>.</p> <h3 id="static-text-example"><a href="#static-text-example">Static text example</a></h3> <!> <h3 id="dynamic-text-with-variables-example"><a href="#dynamic-text-with-variables-example">Dynamic text with variables example</a></h3> <!> <h3 id="attributes-example"><a href="#attributes-example">Attributes example</a></h3> <blockquote><p>You can reference attributes of a translation message by calling <code>localize</code> with both identifiers joined with a period.</p> <p>In the example below this is done for the <code>.default</code> attribute of the <code>prompt</code> message by
calling <code>localize</code> with <code>'prompt.default'</code> as the message identifier.</p></blockquote> <!>`,1);function ms(n){var s=rs(),o=R(s);o.textContent=cs;var e=a(o,2),c=a(y(e),3);r(c,{name:"Localized"});var F=a(c,2);r(F,{name:"Overlay"});var _=a(F,2);r(_,{name:"getFluentContext"}),A(),C(e);var d=a(e,6),g=y(d),v=a(y(g));r(v,{name:"Localized"});var z=a(v,2);r(z,{name:"getFluentContext"}),A(5),C(g),C(d);var w=a(d,2);P(w,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#569CD6">const</span><span style="color:#D4D4D4"> &#123; </span><span style="color:#4FC1FF">localize</span><span style="color:#D4D4D4"> &#125; = </span><span style="color:#DCDCAA">getFluentContext</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#569CD6">const</span><span style="color:#4FC1FF"> text</span><span style="color:#D4D4D4"> = </span><span style="color:#DCDCAA">localize</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">id</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">args</span><span style="color:#D4D4D4">);</span></span></code></pre>`);var k=a(w,12);U(k);var $=a(k,4);Q($);var S=a($,6);ts(S),i(n,s)}export{ms as _,ps as m};
