import{t as Z,a as G}from"./4tKShDGO.js";import"./CEAqvYWw.js";import{X as J,s,f as Q,Z as V,c as n,aw as o,r as l}from"./BUVD2a5l.js";import{h as a}from"./4yc6gDS_.js";import{s as p}from"./6tCFq3Cv.js";import{i as ss}from"./DVkPH54X.js";import{R as e}from"./BK3e1hyi.js";const as=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#6A9955">&#x3C;!-- src/routes/+layout.svelte --></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#9CDCFE"> lang</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"ts"</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">initFluentContext</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#C586C0"> type</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">PageData</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> './$types'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#C586C0"> type</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">Snippet</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> 'svelte'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	let</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">data</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">children</span><span style="color:#D4D4D4"> }: { </span><span style="color:#9CDCFE">data</span><span style="color:#D4D4D4">: </span><span style="color:#4EC9B0">PageData</span><span style="color:#D4D4D4">; </span><span style="color:#9CDCFE">children</span><span style="color:#D4D4D4">: </span><span style="color:#4EC9B0">Snippet</span><span style="color:#D4D4D4"> } = $</span><span style="color:#DCDCAA">props</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#DCDCAA">	initFluentContext</span><span style="color:#D4D4D4">(() </span><span style="color:#569CD6">=></span><span style="color:#9CDCFE"> data</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">fluent</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4">{@</span><span style="color:#569CD6">render</span><span style="color:#DCDCAA"> children</span><span style="color:#D4D4D4">()}</span></span>
<span class="line"></span></code></pre>`,ns=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#D4D4D4"> &#x3C;script lang="ts"></span></span>
<span class="line"><span style="color:#D4D4D4">        import { Localized } from '@nubolab-ffwd/svelte-fluent';</span></span>
<span class="line"><span style="color:#B5CEA8">+       import type { ActionData } from './$types';</span></span>
<span class="line"><span style="color:#B5CEA8">+</span></span>
<span class="line"><span style="color:#B5CEA8">+       let { form }: { form: ActionData } = $props();</span></span>
<span class="line"><span style="color:#D4D4D4"> &#x3C;/script></span></span>
<span class="line"></span></code></pre>`,ls=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#6A9955">&#x3C;!-- src/routes/+page.svelte --></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#9CDCFE"> lang</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"ts"</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">h1</span><span style="color:#808080">>&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"welcome"</span><span style="color:#808080"> />&#x3C;/</span><span style="color:#569CD6">h1</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,T="/svelte-fluent/_app/immutable/assets/screenshot.M7RKde9P.png?w=500;900;1200&avif&metadata",O="/svelte-fluent/_app/immutable/assets/screenshot-bonus.CjCXoK-w.png",ys=[{rank:1,text:"Integration",id:"integration"},{rank:2,text:"SvelteKit",id:"sveltekit"},{rank:3,text:"Initialize a SvelteKit app",id:"initialize-a-sveltekit-app"},{rank:3,text:"Create translation files",id:"create-translation-files"},{rank:3,text:"Load translations and select language",id:"load-translations-and-select-language"},{rank:3,text:"Add server hook",id:"add-server-hook"},{rank:3,text:"Client integration",id:"client-integration"},{rank:3,text:"Render your first localized message",id:"render-your-first-localized-message"},{rank:3,text:"Launch the app",id:"launch-the-app"},{rank:3,text:"Bonus: server-side localization",id:"bonus-server-side-localization"},{rank:3,text:"What’s next?",id:"whats-next"}];var es=Z(`<h1 id="integration">Integration</h1> <h2 id="sveltekit"><a href="#sveltekit">SvelteKit</a></h2> <h3 id="initialize-a-sveltekit-app"><a href="#initialize-a-sveltekit-app">Initialize a SvelteKit app</a></h3> <p>Use <code>npm create</code> to initialize an new SvelteKit project called <code>svelte-fluent-sveltekit</code>.</p> <ul><li>Select “Skeleton project” when asked for the template</li> <li>Select “Yes, using TypeScript syntax” when asked for typescript type checking</li></ul> <!> <p>Now install <code>svelte-fluent</code>:</p> <!> <p>We also need <code>@fluent/bundle</code> to parse the <code>.ftl</code> files:</p> <!> <p>We will be using <code>@fluent/langneg</code> for selecting the displayed language based on
the browser’s <code>Accept-Language</code> header. Let’s install it with:</p> <!> <p>Some features of <code>svelte-fluent</code> require a vite plugin to function.
Let’s add it to <code>vite.config.ts</code>:</p> <!> <h3 id="create-translation-files"><a href="#create-translation-files">Create translation files</a></h3> <p>Let’s create some translation files that we can use in our application:</p> <!> <!> <h3 id="load-translations-and-select-language"><a href="#load-translations-and-select-language">Load translations and select language</a></h3> <p>Now that we have some translation files, we can load them.
We also want our app to respect the browser language settings of our visitors.
Let’s create some helpers for that in <code>src/lib/fluent.ts</code>:</p> <!> <p>Typescript will complain about the imports of the <code>.ftl</code> files.
Don’t worry, we’ll fix this in a moment.</p> <h3 id="add-server-hook"><a href="#add-server-hook">Add server hook</a></h3> <p>We need to add a <a href="https://kit.svelte.dev/docs/hooks#server-hooks" rel="noopener noreferrer" target="_blank">SvelteKit server hook</a> that selects the appropriate locale and creates the <!> object.</p> <p>Let’s use the new helpers we created to build the hook:</p> <!> <p>Now Typescript will complain about <code>event.locals.locale</code> and <code>event.locals.fluent</code>.
To fix this we need to modify our <code>src/app.d.ts</code>:</p> <!> <h3 id="client-integration"><a href="#client-integration">Client integration</a></h3> <p>On the client side, it’s impossible to access <code>event.locals.locale</code> and <code>event.locals.fluent</code> that we added in the server hook. We need some additional
code to bridge the gap.</p> <p>Let’s start by adding a <code>src/routes/+layout.server.ts</code>:</p> <!> <p>This exposes <code>event.locals.locale</code> as <code>event.data.locale</code> on the client.
We also need the <!> object which we can create in <code>src/routes/+layout.ts</code>:</p> <!> <p>Now we can access the <!> object via <code>event.data.fluent</code> and
use it to initialize the <!> in <code>src/routes/+layout.svelte</code> which
is required for using the <!> and <!> components.</p> <!> <h3 id="render-your-first-localized-message"><a href="#render-your-first-localized-message">Render your first localized message</a></h3> <p>With all the setup work complete, it’s finally time to render your first
localized message in <code>src/routes/+page.svelte</code>:</p> <!> <h3 id="launch-the-app"><a href="#launch-the-app">Launch the app</a></h3> <p>Now we have all the pieces in place and can open the app. Run this in a terminal:</p> <!> <p>Open your browser and go to <a href="http://localhost:5173" rel="noopener noreferrer" target="_blank">http://localhost:5173</a> and you should see the app.</p> <p><a><img alt="Screenshot of the opened browser window" class="svelte-f7h00e"></a></p> <h3 id="bonus-server-side-localization"><a href="#bonus-server-side-localization">Bonus: server-side localization</a></h3> <p>We want to extend our application with a form. The form should validate inputs
and generate localized error messages if validation fails.</p> <p>Let’s start by adding some additional messages to our translation files:</p> <!> <!> <p>Next we add a form to <code>src/routes/+page.svelte</code>:</p> <!> <p>Also we need to add a <a href="https://kit.svelte.dev/docs/form-actions" rel="noopener noreferrer" target="_blank">SvelteKit form action</a> to <code>src/routes/+page.server.ts</code>:</p> <!> <p>And finally, we need to handle the response from the action in our form in <code>src/routes/+page.svelte</code>:</p> <!> <!> <p>Now open your browser and go to <a href="http://localhost:5173" rel="noopener noreferrer" target="_blank">http://localhost:5173</a> and you should see
the new form that displays localized error messages when you submit it.</p> <p><a><img alt="Screenshot of the opened browser window" class="svelte-f7h00e"></a></p> <h3 id="whats-next"><a href="#whats-next">What’s next?</a></h3> <p>You now have a fully functional application where you can localize messages with <code>svelte-fluent</code>.</p> <p>You can learn more about how to use <code>svelte-fluent</code> in the <a href="../tutorial">Tutorial</a> or check out the <a href="../reference">Reference</a> for API documentation.</p>`,1);function Cs($,I){J(I,!1);const t=Object.assign({"./snippets/client-integration-layout.svelte":as,"./snippets/final-props.patch":ns,"./snippets/first-localized-page.svelte":ls});ss();var d=es(),u=s(Q(d),10);a(u,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#DCDCAA">npm</span><span style="color:#CE9178"> create</span><span style="color:#CE9178"> svelte@latest</span><span style="color:#CE9178"> svelte-fluent-sveltekit</span></span>
<span class="line"><span style="color:#DCDCAA">cd</span><span style="color:#CE9178"> svelte-fluent-sveltekit</span></span>
<span class="line"><span style="color:#DCDCAA">npm</span><span style="color:#CE9178"> install</span></span></code></pre>`);var E=s(u,4);a(E,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#DCDCAA">npm</span><span style="color:#CE9178"> install</span><span style="color:#569CD6"> --save-dev</span><span style="color:#CE9178"> @nubolab-ffwd/svelte-fluent</span></span>
<span class="line"><span style="color:#DCDCAA">npm</span><span style="color:#CE9178"> install</span><span style="color:#569CD6"> --save</span><span style="color:#CE9178"> jsdom</span></span></code></pre>`);var f=s(E,4);a(f,()=>'<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#DCDCAA">npm</span><span style="color:#CE9178"> install</span><span style="color:#569CD6"> --save-dev</span><span style="color:#CE9178"> @fluent/bundle</span></span></code></pre>');var h=s(f,4);a(h,()=>'<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#DCDCAA">npm</span><span style="color:#CE9178"> install</span><span style="color:#569CD6"> --save-dev</span><span style="color:#CE9178"> @fluent/langneg</span></span></code></pre>');var m=s(h,4);a(m,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#D4D4D4"> import &#123; sveltekit &#125; from '@sveltejs/kit/vite';</span></span>
<span class="line"><span style="color:#D4D4D4"> import &#123; defineConfig &#125; from 'vite';</span></span>
<span class="line"><span style="color:#B5CEA8">+import svelteFluent from '@nubolab-ffwd/svelte-fluent/vite';</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4"> export default defineConfig(&#123;</span></span>
<span class="line"><span style="color:#CE9178">-       plugins: [sveltekit()]</span></span>
<span class="line"><span style="color:#B5CEA8">+       plugins: [svelteFluent(), sveltekit()]</span></span>
<span class="line"><span style="color:#D4D4D4"> &#125;);</span></span>
<span class="line"></span></code></pre>`);var v=s(m,6);a(v,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#6A9955"># src/translations/en.ftl</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4EC9B0">welcome = </span><span style="color:#CE9178">Welcome to svelte-fluent!</span></span></code></pre>`);var g=s(v,2);a(g,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#6A9955"># src/translations/de.ftl</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4EC9B0">welcome = </span><span style="color:#CE9178">Willkommen bei svelte-fluent!</span></span></code></pre>`);var A=s(g,6);a(A,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#6A9955">// src/lib/fluent.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">import</span><span style="color:#D4D4D4"> &#123; </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">FluentResource</span><span style="color:#D4D4D4"> &#125; </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">import</span><span style="color:#D4D4D4"> &#123; </span><span style="color:#9CDCFE">acceptedLanguages</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">negotiateLanguages</span><span style="color:#D4D4D4"> &#125; </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/langneg'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">import</span><span style="color:#C586C0"> type</span><span style="color:#D4D4D4"> &#123; </span><span style="color:#9CDCFE">RequestEvent</span><span style="color:#D4D4D4"> &#125; </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@sveltejs/kit'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">import</span><span style="color:#9CDCFE"> resourcesDe</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> '../translations/de.ftl'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">import</span><span style="color:#9CDCFE"> resourcesEn</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> '../translations/en.ftl'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">const</span><span style="color:#4FC1FF"> defaultLocale</span><span style="color:#D4D4D4"> = </span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">const</span><span style="color:#4FC1FF"> resources</span><span style="color:#D4D4D4">: </span><span style="color:#4EC9B0">Record</span><span style="color:#D4D4D4">&#x3C;</span><span style="color:#4EC9B0">string</span><span style="color:#D4D4D4">, </span><span style="color:#4EC9B0">FluentResource</span><span style="color:#D4D4D4">> = &#123;</span></span>
<span class="line"><span style="color:#9CDCFE">	de:</span><span style="color:#9CDCFE"> resourcesDe</span><span style="color:#D4D4D4">,</span></span>
<span class="line"><span style="color:#9CDCFE">	en:</span><span style="color:#9CDCFE"> resourcesEn</span></span>
<span class="line"><span style="color:#D4D4D4">&#125;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">export</span><span style="color:#569CD6"> function</span><span style="color:#DCDCAA"> generateBundles</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">locale</span><span style="color:#D4D4D4">: </span><span style="color:#4EC9B0">string</span><span style="color:#D4D4D4">): </span><span style="color:#4EC9B0">FluentBundle</span><span style="color:#D4D4D4">[] &#123;</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">locale</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#9CDCFE">	bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resources</span><span style="color:#D4D4D4">[</span><span style="color:#9CDCFE">locale</span><span style="color:#D4D4D4">]);</span></span>
<span class="line"><span style="color:#C586C0">	return</span><span style="color:#D4D4D4"> [</span><span style="color:#9CDCFE">bundle</span><span style="color:#D4D4D4">];</span></span>
<span class="line"><span style="color:#D4D4D4">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">export</span><span style="color:#569CD6"> function</span><span style="color:#DCDCAA"> negotiateLocale</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">ev</span><span style="color:#D4D4D4">: </span><span style="color:#4EC9B0">RequestEvent</span><span style="color:#D4D4D4">): </span><span style="color:#4EC9B0">string</span><span style="color:#D4D4D4"> &#123;</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> accepted</span><span style="color:#D4D4D4"> = </span><span style="color:#DCDCAA">acceptedLanguages</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">ev</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">request</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">headers</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">get</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'accept-language'</span><span style="color:#D4D4D4">) ?? </span><span style="color:#CE9178">''</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#C586C0">	return</span><span style="color:#D4D4D4"> (</span></span>
<span class="line"><span style="color:#DCDCAA">		negotiateLanguages</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">accepted</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Object</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">keys</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resources</span><span style="color:#D4D4D4">), &#123;</span></span>
<span class="line"><span style="color:#9CDCFE">			defaultLocale</span><span style="color:#D4D4D4">,</span></span>
<span class="line"><span style="color:#9CDCFE">			strategy:</span><span style="color:#CE9178"> 'lookup'</span></span>
<span class="line"><span style="color:#D4D4D4">		&#125;).</span><span style="color:#DCDCAA">at</span><span style="color:#D4D4D4">(</span><span style="color:#B5CEA8">0</span><span style="color:#D4D4D4">) ?? </span><span style="color:#9CDCFE">defaultLocale</span></span>
<span class="line"><span style="color:#D4D4D4">	);</span></span>
<span class="line"><span style="color:#D4D4D4">&#125;</span></span></code></pre>`);var r=s(A,6),Y=s(n(r),3);e(Y,{name:"SvelteFluent"}),o(),l(r);var b=s(r,4);a(b,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#6A9955">// src/hooks.server.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">import</span><span style="color:#D4D4D4"> &#123; </span><span style="color:#9CDCFE">generateBundles</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">negotiateLocale</span><span style="color:#D4D4D4"> &#125; </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '$lib/fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">import</span><span style="color:#C586C0"> type</span><span style="color:#D4D4D4"> &#123; </span><span style="color:#9CDCFE">Handle</span><span style="color:#D4D4D4"> &#125; </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@sveltejs/kit'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">import</span><span style="color:#D4D4D4"> &#123; </span><span style="color:#9CDCFE">createSvelteFluent</span><span style="color:#D4D4D4"> &#125; </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">export</span><span style="color:#569CD6"> const</span><span style="color:#DCDCAA"> handle</span><span style="color:#D4D4D4">: </span><span style="color:#4EC9B0">Handle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">async</span><span style="color:#D4D4D4"> (&#123; </span><span style="color:#9CDCFE">event</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">resolve</span><span style="color:#D4D4D4"> &#125;) </span><span style="color:#569CD6">=></span><span style="color:#D4D4D4"> &#123;</span></span>
<span class="line"><span style="color:#9CDCFE">	event</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">locals</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">locale</span><span style="color:#D4D4D4"> = </span><span style="color:#DCDCAA">negotiateLocale</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">event</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#9CDCFE">	event</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">locals</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">fluent</span><span style="color:#D4D4D4"> = </span><span style="color:#DCDCAA">createSvelteFluent</span><span style="color:#D4D4D4">(</span><span style="color:#DCDCAA">generateBundles</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">event</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">locals</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">locale</span><span style="color:#D4D4D4">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">	return</span><span style="color:#DCDCAA"> resolve</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">event</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#D4D4D4">&#125;;</span></span></code></pre>`);var F=s(b,4);a(F,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#B5CEA8">+import '@nubolab-ffwd/svelte-fluent/types';</span></span>
<span class="line"><span style="color:#B5CEA8">+import &#123; SvelteFluent &#125; from '@nubolab-ffwd/svelte-fluent';</span></span>
<span class="line"><span style="color:#B5CEA8">+</span></span>
<span class="line"><span style="color:#D4D4D4"> // See https://kit.svelte.dev/docs/types#app</span></span>
<span class="line"><span style="color:#D4D4D4"> // for information about these interfaces</span></span>
<span class="line"><span style="color:#D4D4D4"> declare global &#123;</span></span>
<span class="line"><span style="color:#D4D4D4">        namespace App &#123;</span></span>
<span class="line"><span style="color:#D4D4D4">                // interface Error &#123;&#125;</span></span>
<span class="line"><span style="color:#CE9178">-               // interface Locals &#123;&#125;</span></span>
<span class="line"><span style="color:#B5CEA8">+               interface Locals &#123;</span></span>
<span class="line"><span style="color:#B5CEA8">+                       locale: string;</span></span>
<span class="line"><span style="color:#B5CEA8">+                       fluent: SvelteFluent;</span></span>
<span class="line"><span style="color:#B5CEA8">+               &#125;</span></span>
<span class="line"><span style="color:#D4D4D4">                // interface PageData &#123;&#125;</span></span>
<span class="line"><span style="color:#D4D4D4">                // interface PageState &#123;&#125;</span></span>
<span class="line"><span style="color:#D4D4D4">                // interface Platform &#123;&#125;</span></span></code></pre>`);var k=s(F,8);a(k,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#6A9955">// src/routes/+layout.server.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">export</span><span style="color:#569CD6"> function</span><span style="color:#DCDCAA"> load</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">event</span><span style="color:#D4D4D4">) &#123;</span></span>
<span class="line"><span style="color:#6A9955">	// expose selected locale from hook to client</span></span>
<span class="line"><span style="color:#C586C0">	return</span><span style="color:#D4D4D4"> &#123; </span><span style="color:#9CDCFE">locale:</span><span style="color:#9CDCFE"> event</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">locals</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">locale</span><span style="color:#D4D4D4"> &#125;;</span></span>
<span class="line"><span style="color:#D4D4D4">&#125;</span></span></code></pre>`);var c=s(k,2),H=s(n(c),5);e(H,{name:"SvelteFluent"}),o(3),l(c);var x=s(c,2);a(x,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#6A9955">// src/routes/+layout.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">import</span><span style="color:#D4D4D4"> &#123; </span><span style="color:#9CDCFE">generateBundles</span><span style="color:#D4D4D4"> &#125; </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '$lib/fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">import</span><span style="color:#D4D4D4"> &#123; </span><span style="color:#9CDCFE">createSvelteFluent</span><span style="color:#D4D4D4"> &#125; </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">export</span><span style="color:#569CD6"> function</span><span style="color:#DCDCAA"> load</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">event</span><span style="color:#D4D4D4">) &#123;</span></span>
<span class="line"><span style="color:#C586C0">	return</span><span style="color:#D4D4D4"> &#123;</span></span>
<span class="line"><span style="color:#D4D4D4">		...</span><span style="color:#9CDCFE">event</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">data</span><span style="color:#D4D4D4">,</span></span>
<span class="line"><span style="color:#9CDCFE">		fluent:</span><span style="color:#DCDCAA"> createSvelteFluent</span><span style="color:#D4D4D4">(</span><span style="color:#DCDCAA">generateBundles</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">event</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">data</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">locale</span><span style="color:#D4D4D4">))</span></span>
<span class="line"><span style="color:#D4D4D4">	&#125;;</span></span>
<span class="line"><span style="color:#D4D4D4">&#125;</span></span></code></pre>`);var D=s(x,2),w=s(n(D));e(w,{name:"SvelteFluent"});var B=s(w,4);e(B,{name:"FluentContext"});var _=s(B,4);e(_,{name:"Localized"});var X=s(_,2);e(X,{name:"Overlay"}),o(),l(D);var z=s(D,2);a(z,()=>t["./snippets/client-integration-layout.svelte"]);var L=s(z,6);a(L,()=>t["./snippets/first-localized-page.svelte"]);var S=s(L,6);a(S,()=>'<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#DCDCAA">npm</span><span style="color:#CE9178"> run</span><span style="color:#CE9178"> dev</span></span></code></pre>');var i=s(S,4),y=n(i);p(y,"href",T);var M=n(y);p(M,"src",T),l(y),l(i);var W=s(i,8);a(W,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#D4D4D4"> # src/translations/en.ftl</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4"> welcome = Welcome to svelte-fluent!</span></span>
<span class="line"><span style="color:#B5CEA8">+</span></span>
<span class="line"><span style="color:#B5CEA8">+example-form =</span></span>
<span class="line"><span style="color:#B5CEA8">+  .heading = Example form</span></span>
<span class="line"><span style="color:#B5CEA8">+  .name-field-label = Name</span></span>
<span class="line"><span style="color:#B5CEA8">+  .submit-label = Submit</span></span>
<span class="line"><span style="color:#B5CEA8">+  .name-required-error = Name must not be empty</span></span>
<span class="line"><span style="color:#B5CEA8">+  .success-message = Form was submitted successfully!</span></span></code></pre>`);var j=s(W,2);a(j,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#D4D4D4"> # src/translations/de.ftl</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4"> welcome = Willkommen bei svelte-fluent!</span></span>
<span class="line"><span style="color:#B5CEA8">+</span></span>
<span class="line"><span style="color:#B5CEA8">+example-form =</span></span>
<span class="line"><span style="color:#B5CEA8">+  .heading = Beispielformular</span></span>
<span class="line"><span style="color:#B5CEA8">+  .name-field-label = Name</span></span>
<span class="line"><span style="color:#B5CEA8">+  .submit-label = Absenden</span></span>
<span class="line"><span style="color:#B5CEA8">+  .name-required-error = Name darf nicht leer sein</span></span>
<span class="line"><span style="color:#B5CEA8">+  .success-message = Formular wurde erfolgreich abgeschickt!</span></span></code></pre>`);var R=s(j,4);a(R,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#D4D4D4"> &#x3C;/script></span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4"> &#x3C;h1>&#x3C;Localized id="welcome" />&#x3C;/h1></span></span>
<span class="line"><span style="color:#B5CEA8">+</span></span>
<span class="line"><span style="color:#B5CEA8">+&#x3C;Localized id="example-form"></span></span>
<span class="line"><span style="color:#B5CEA8">+       &#123;#snippet children(&#123; attrs &#125;)&#125;</span></span>
<span class="line"><span style="color:#B5CEA8">+               &#x3C;h2>&#123;attrs.heading&#125;&#x3C;/h2></span></span>
<span class="line"><span style="color:#B5CEA8">+               &#x3C;form method="POST"></span></span>
<span class="line"><span style="color:#B5CEA8">+                       &#x3C;label></span></span>
<span class="line"><span style="color:#B5CEA8">+                               &#123;attrs['name-field-label']&#125;</span></span>
<span class="line"><span style="color:#B5CEA8">+                               &#x3C;input name="name" /></span></span>
<span class="line"><span style="color:#B5CEA8">+                       &#x3C;/label></span></span>
<span class="line"><span style="color:#B5CEA8">+                       &#x3C;button>&#123;attrs['submit-label']&#125;&#x3C;/button></span></span>
<span class="line"><span style="color:#B5CEA8">+               &#x3C;/form></span></span>
<span class="line"><span style="color:#B5CEA8">+       &#123;/snippet&#125;</span></span>
<span class="line"><span style="color:#B5CEA8">+&#x3C;/Localized></span></span></code></pre>`);var N=s(R,4);a(N,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#C586C0">import</span><span style="color:#D4D4D4"> &#123; </span><span style="color:#9CDCFE">fail</span><span style="color:#D4D4D4"> &#125; </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@sveltejs/kit'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">import</span><span style="color:#C586C0"> type</span><span style="color:#D4D4D4"> &#123; </span><span style="color:#9CDCFE">Actions</span><span style="color:#D4D4D4"> &#125; </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> './$types'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">export</span><span style="color:#569CD6"> const</span><span style="color:#4FC1FF"> actions</span><span style="color:#D4D4D4"> = &#123;</span></span>
<span class="line"><span style="color:#DCDCAA">	default</span><span style="color:#9CDCFE">:</span><span style="color:#569CD6"> async</span><span style="color:#D4D4D4"> (&#123; </span><span style="color:#9CDCFE">request</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">locals</span><span style="color:#D4D4D4">: &#123; </span><span style="color:#9CDCFE">fluent</span><span style="color:#D4D4D4"> &#125; &#125;) </span><span style="color:#569CD6">=></span><span style="color:#D4D4D4"> &#123;</span></span>
<span class="line"><span style="color:#569CD6">		const</span><span style="color:#4FC1FF"> data</span><span style="color:#D4D4D4"> = </span><span style="color:#C586C0">await</span><span style="color:#9CDCFE"> request</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">formData</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#569CD6">		const</span><span style="color:#4FC1FF"> name</span><span style="color:#D4D4D4"> = </span><span style="color:#9CDCFE">data</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">get</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'name'</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#C586C0">		if</span><span style="color:#D4D4D4"> (!</span><span style="color:#9CDCFE">name</span><span style="color:#D4D4D4"> || !</span><span style="color:#9CDCFE">name</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">toString</span><span style="color:#D4D4D4">().</span><span style="color:#DCDCAA">trim</span><span style="color:#D4D4D4">()) &#123;</span></span>
<span class="line"><span style="color:#6A9955">			// render the localized error message</span></span>
<span class="line"><span style="color:#569CD6">			const</span><span style="color:#4FC1FF"> error</span><span style="color:#D4D4D4"> = </span><span style="color:#9CDCFE">fluent</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">localize</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'example-form.name-required-error'</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#C586C0">			return</span><span style="color:#DCDCAA"> fail</span><span style="color:#D4D4D4">(</span><span style="color:#B5CEA8">400</span><span style="color:#D4D4D4">, &#123; </span><span style="color:#9CDCFE">name</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">error</span><span style="color:#D4D4D4"> &#125;);</span></span>
<span class="line"><span style="color:#D4D4D4">		&#125;</span></span>
<span class="line"><span style="color:#C586C0">		return</span><span style="color:#D4D4D4"> &#123; </span><span style="color:#9CDCFE">success:</span><span style="color:#569CD6"> true</span><span style="color:#D4D4D4"> &#125;;</span></span>
<span class="line"><span style="color:#D4D4D4">	&#125;</span></span>
<span class="line"><span style="color:#D4D4D4">&#125; </span><span style="color:#C586C0">satisfies</span><span style="color:#4EC9B0"> Actions</span><span style="color:#D4D4D4">;</span></span></code></pre>`);var q=s(N,4);a(q,()=>t["./snippets/final-props.patch"]);var K=s(q,2);a(K,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#D4D4D4"> &#x3C;Localized id="example-form"></span></span>
<span class="line"><span style="color:#D4D4D4">        &#123;#snippet children(&#123; attrs &#125;)&#125;</span></span>
<span class="line"><span style="color:#D4D4D4">                &#x3C;h2>&#123;attrs.heading&#125;&#x3C;/h2></span></span>
<span class="line"><span style="color:#B5CEA8">+</span></span>
<span class="line"><span style="color:#B5CEA8">+               &#123;#if form?.success&#125;</span></span>
<span class="line"><span style="color:#B5CEA8">+                       &#x3C;p>&#123;attrs['success-message']&#125;&#x3C;/p></span></span>
<span class="line"><span style="color:#B5CEA8">+               &#123;/if&#125;</span></span>
<span class="line"><span style="color:#B5CEA8">+</span></span>
<span class="line"><span style="color:#D4D4D4">                &#x3C;form method="POST"></span></span>
<span class="line"><span style="color:#B5CEA8">+                       &#123;#if form?.error&#125;&#x3C;p class="error">&#123;form.error&#125;&#x3C;/p>&#123;/if&#125;</span></span>
<span class="line"><span style="color:#D4D4D4">                        &#x3C;label></span></span>
<span class="line"><span style="color:#D4D4D4">                                &#123;attrs['name-field-label']&#125;</span></span>
<span class="line"><span style="color:#CE9178">-                               &#x3C;input name="name" /></span></span>
<span class="line"><span style="color:#B5CEA8">+                               &#x3C;input name="name" value=&#123;form?.name ?? ''&#125; /></span></span>
<span class="line"><span style="color:#D4D4D4">                        &#x3C;/label></span></span>
<span class="line"><span style="color:#D4D4D4">                        &#x3C;button>&#123;attrs['submit-label']&#125;&#x3C;/button></span></span>
<span class="line"><span style="color:#D4D4D4">                &#x3C;/form></span></span></code></pre>`);var P=s(K,4),C=n(P);p(C,"href",O);var U=n(C);p(U,"src",O),l(C),l(P),o(6),G($,d),V()}export{Cs as _,ys as h};
