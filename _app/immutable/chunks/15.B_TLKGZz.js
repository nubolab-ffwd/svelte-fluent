import{t as i,a as d}from"./disclose-version.-a0Zl78y.js";import"./legacy.D0ooBJ0f.js";import{e as c}from"./escaping.CsChSfdw.js";import{f as p,s as t,c as h,au as l,r as f}from"./runtime.29gPcexE.js";import{h as m}from"./html.BiPRJKkd.js";import{R as u}from"./ReferenceLink.B76kVh8V.js";const g={title:"SvelteFluent"},{title:v}=g;var D=i(`<h1 id="title">${c(v)}</h1> <p>The <code>SvelteFluent</code> object provides methods and properties for localization with <code>svelte-fluent</code>.</p> <p>You can create the <code>SvelteFluent</code> object with the <!> function.</p> <h2 id="sveltefluentlocalize"><a href="#sveltefluentlocalize">SvelteFluent.localize</a></h2> <p>Localize a fluent message.</p> <!> <h3 id="parameters"><a href="#parameters">Parameters</a></h3> <div class="responsive-table"><table><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>id</code></td><td align="left"><code>string</code></td><td align="left">Identifier of the fluent message</td></tr><tr><td align="left"><code>args</code></td><td align="left"><code>Record&lt;string, FluentVariable></code></td><td align="left">Interpolation arguments for the message</td></tr></tbody></table></div> <h3 id="return-value"><a href="#return-value">Return value</a></h3> <p>The localized message as a <code>string</code>.</p>`,1);function _(o){var a=D(),s=p(a),e=t(s,4),r=t(h(e),3);u(r,{name:"createSvelteFluent"}),l(),f(e);var n=t(e,6);m(n,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#9CDCFE">fluent</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">localize</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'example-message'</span><span style="color:#D4D4D4">, &#123; </span><span style="color:#9CDCFE">name:</span><span style="color:#CE9178"> 'Example'</span><span style="color:#D4D4D4"> &#125;);</span></span></code></pre>`),l(8),d(o,a)}export{_,g as m};
