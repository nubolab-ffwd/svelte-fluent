import{t as w,a as z}from"./BX7aGI6g.js";import"./Cq3lCfSJ.js";import{p as r,a as D,f as $,s as e,c as p,ar as g,r as c}from"./4NjQPSOq.js";import{h as _}from"./B1hMXq3l.js";import{R as l}from"./DXd_BmJq.js";import{F as i,d as S,b as y,f as R,c as d,E as C,g as T,h as q,j as L,k as P}from"./BEPero-Z.js";import{i as u}from"./H8fx6OYh.js";function B(a,s){r(s,!1);const n=new i("en");n.addResource(S),y(()=>d([n])),u(),R(a,{}),D()}const I=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">getFluentContext</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#D4D4D4"> { </span><span style="color:#4FC1FF">localize</span><span style="color:#D4D4D4"> } = </span><span style="color:#DCDCAA">getFluentContext</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">button</span><span style="color:#9CDCFE"> onclick</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">() </span><span style="color:#569CD6">=></span><span style="color:#9CDCFE"> window</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">prompt</span><span style="color:#D4D4D4">(</span><span style="color:#DCDCAA">localize</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'prompt'</span><span style="color:#D4D4D4">), </span><span style="color:#DCDCAA">localize</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'prompt.default'</span><span style="color:#D4D4D4">))</span><span style="color:#569CD6">}</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#D4D4D4">	Show prompt</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">button</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,j=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">prompt = </span><span style="color:#CE9178">Please enter your name</span></span>
<span class="line"><span style="color:#4EC9B0">	.default = </span><span style="color:#CE9178">Your name goes here</span></span>
<span class="line"></span></code></pre>`;function H(a){C(a,{sources:{"Component.svelte":{code:I,html:!0},"en.ftl":{code:j,html:!0}},children:(s,n)=>{B(s,{})},$$slots:{default:!0}})}function U(a,s){r(s,!1);const n=new i("en");n.addResource(T),y(()=>d([n])),u(),q(a,{}),D()}const Y=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">getFluentContext</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#D4D4D4"> { </span><span style="color:#4FC1FF">localize</span><span style="color:#D4D4D4"> } = </span><span style="color:#DCDCAA">getFluentContext</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> name</span><span style="color:#D4D4D4"> = </span><span style="color:#CE9178">'World'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">button</span><span style="color:#9CDCFE"> onclick</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">() </span><span style="color:#569CD6">=></span><span style="color:#9CDCFE"> window</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">alert</span><span style="color:#D4D4D4">(</span><span style="color:#DCDCAA">localize</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'hello'</span><span style="color:#D4D4D4">, { </span><span style="color:#9CDCFE">name</span><span style="color:#D4D4D4"> }))</span><span style="color:#569CD6">}</span><span style="color:#808080">></span><span style="color:#D4D4D4">Say hello</span><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">button</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,N=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hello, </span><span style="color:#569CD6">{</span><span style="color:#9CDCFE">$name</span><span style="color:#569CD6">}</span><span style="color:#CE9178">!</span></span>
<span class="line"></span></code></pre>`;function O(a){C(a,{sources:{"Component.svelte":{code:Y,html:!0},"en.ftl":{code:N,html:!0}},children:(s,n)=>{U(s,{})},$$slots:{default:!0}})}function V(a,s){r(s,!1);const n=new i("en");n.addResource(L),y(()=>d([n])),u(),P(a,{}),D()}const W=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">getFluentContext</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#D4D4D4"> { </span><span style="color:#4FC1FF">localize</span><span style="color:#D4D4D4"> } = </span><span style="color:#DCDCAA">getFluentContext</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">button</span><span style="color:#9CDCFE"> onclick</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">() </span><span style="color:#569CD6">=></span><span style="color:#9CDCFE"> window</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">alert</span><span style="color:#D4D4D4">(</span><span style="color:#DCDCAA">localize</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'hello'</span><span style="color:#D4D4D4">))</span><span style="color:#569CD6">}</span><span style="color:#808080">></span><span style="color:#D4D4D4">Say hello</span><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">button</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,G=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hello, world!</span></span>
<span class="line"></span></code></pre>`;function J(a){C(a,{sources:{"Component.svelte":{code:W,html:!0},"en.ftl":{code:G,html:!0}},children:(s,n)=>{V(s,{})},$$slots:{default:!0}})}const K={title:"FluentContext"},{title:M}=K;var Q=w(`<h1 id="title"></h1> <p>The <code>FluentContext</code> object exposes localization functions via the svelte context.
Itâ€™s used internally by the <!> and <!> components.
It can also be retrieved with <!> and used directly.</p> <h2 id="fluentcontextlocalize"><a href="#fluentcontextlocalize">FluentContext.localize</a></h2> <p>The <code>FluentContext.localize</code> function allows you to use localizations in component scripts. This can be useful when interacting
with browser APIs or third-party libraries.</p> <blockquote><p>Using the <!> and <!> components is the
preferred way to localize your application with <code>svelte-fluent</code>.
The <code>FluentContext.localize</code> function provides additional flexibility in situations where using the components would not be
feasible.</p></blockquote> <!> <h3 id="parameters"><a href="#parameters">Parameters</a></h3> <div class="responsive-table"><table><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Default</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><code>id</code></td><td align="left"><code>string</code></td><td align="left"><code>undefined</code></td><td align="left">Unique identifier for the translation</td></tr><tr><td align="left"><code>args</code></td><td align="left"><code>Record&lt;string, FluentVariable&gt;</code></td><td align="left"><code>undefined</code></td><td align="left">Arguments for interpolation</td></tr></tbody></table></div> <h3 id="return-value"><a href="#return-value">Return value</a></h3> <p>The localized message as a <code>string</code>.</p> <h3 id="static-text-example"><a href="#static-text-example">Static text example</a></h3> <!> <h3 id="dynamic-text-with-variables-example"><a href="#dynamic-text-with-variables-example">Dynamic text with variables example</a></h3> <!> <h3 id="attributes-example"><a href="#attributes-example">Attributes example</a></h3> <blockquote><p>You can reference attributes of a translation message by calling <code>localize</code> with both identifiers joined with a period.</p> <p>In the example below this is done for the <code>.default</code> attribute of the <code>prompt</code> message by
calling <code>localize</code> with <code>'prompt.default'</code> as the message identifier.</p></blockquote> <!>`,1);function os(a){var s=Q(),n=$(s);n.textContent=M;var o=e(n,2),h=e(p(o),3);l(h,{name:"Localized"});var m=e(h,2);l(m,{name:"Overlay"});var v=e(m,2);l(v,{name:"getFluentContext"}),g(),c(o);var t=e(o,6),f=p(t),x=e(p(f));l(x,{name:"Localized"});var k=e(x,2);l(k,{name:"getFluentContext"}),g(5),c(f),c(t);var b=e(t,2);_(b,()=>`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#569CD6">const</span><span style="color:#D4D4D4"> &#123; </span><span style="color:#4FC1FF">localize</span><span style="color:#D4D4D4"> &#125; = </span><span style="color:#DCDCAA">getFluentContext</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#569CD6">const</span><span style="color:#4FC1FF"> text</span><span style="color:#D4D4D4"> = </span><span style="color:#DCDCAA">localize</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">id</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">args</span><span style="color:#D4D4D4">);</span></span></code></pre>`);var E=e(b,12);J(E);var F=e(E,4);O(F);var A=e(F,6);H(A),z(a,s)}export{os as _,K as m};
