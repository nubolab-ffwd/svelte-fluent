import"./NZTpNUN0.js";import"./i2H_t6st.js";import{p as g,c as h,h as C,an as F,f as L,a as B,d as u,s as c,b as $,r as d,aw as I,t as j,ax as M,ay as H,az as K,aQ as _}from"./6SdbO3Am.js";import{b as N,s as U}from"./B7IQPMoK.js";import{b as q}from"./CpbHllMH.js";import{R as x}from"./BVArt-3i.js";import{F as m,a as V,i as A,L as E,c as b,E as v,v as J,w as W,x as O,y as z,z as G,A as Q,B as X,D as Z,G as ss,H as ns}from"./DuuaSmoD.js";import{i as w}from"./nz1HOwX-.js";import{p as as,s as ls}from"./CeY6fNQ9.js";function es(e,s){g(s,!1);const n="hello = Hello, world!",a=new m("en");a.addResource(new V(n)),A(()=>b([a])),w(),E(e,{id:"hello"}),h()}const os=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">FluentResource</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">createSvelteFluent</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">initFluentContext</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> translations</span><span style="color:#D4D4D4"> = </span><span style="color:#CE9178">'hello = Hello, world!'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#9CDCFE">	bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">translations</span><span style="color:#D4D4D4">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA">	initFluentContext</span><span style="color:#D4D4D4">(() </span><span style="color:#569CD6">=></span><span style="color:#DCDCAA"> createSvelteFluent</span><span style="color:#D4D4D4">([</span><span style="color:#9CDCFE">bundle</span><span style="color:#D4D4D4">]));</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"hello"</span><span style="color:#808080"> /></span></span>
<span class="line"></span></code></pre>`;function ps(e){{let s=F(()=>({"App.svelte":{code:os,html:!0}}));v(e,{get sources(){return C(s)},children:(n,a)=>{es(n,{})},$$slots:{default:!0}})}}var ts=L("<div><!></div> <div><!></div>",1);function rs(e,s){g(s,!1);function n(r,i){const y=r[0];if(y instanceof W)return new W(`WEEKDAY(${y.valueOf()})`);if(y instanceof O){const f=new Date(Date.now()),S=y.valueOf()-f.getDay();return f.setDate(f.getDate()+S),new z(f.valueOf(),{weekday:"long"})}if(y instanceof z)return new z(y.valueOf(),{weekday:"long"});throw new TypeError("Invalid argument to WEEKDAY")}const a=new m("en",{functions:{WEEKDAY:n}});a.addResource(J),A(()=>b([a])),w();var l=ts(),t=B(l),D=u(t);E(D,{id:"weekday-number",args:{weekday:2}}),d(t);var p=c(t,2),o=u(p);E(o,{id:"weekday-date",args:{date:new Date(2024,1,6)}}),d(p),$(e,l),h()}const cs=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">FluentDateTime</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">FluentNone</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">FluentNumber</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">createSvelteFluent</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">initFluentContext</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> resourceEn</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './en.ftl'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955">	// eslint-disable-next-line @typescript-eslint/no-unused-vars</span></span>
<span class="line"><span style="color:#569CD6">	function</span><span style="color:#DCDCAA"> WEEKDAY</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">args</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">opts</span><span style="color:#D4D4D4">) {</span></span>
<span class="line"><span style="color:#569CD6">		const</span><span style="color:#4FC1FF"> arg</span><span style="color:#D4D4D4"> = </span><span style="color:#9CDCFE">args</span><span style="color:#D4D4D4">[</span><span style="color:#B5CEA8">0</span><span style="color:#D4D4D4">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">		if</span><span style="color:#D4D4D4"> (</span><span style="color:#9CDCFE">arg</span><span style="color:#569CD6"> instanceof</span><span style="color:#4EC9B0"> FluentNone</span><span style="color:#D4D4D4">) {</span></span>
<span class="line"><span style="color:#C586C0">			return</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> FluentNone</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">\`WEEKDAY(</span><span style="color:#569CD6">\${</span><span style="color:#9CDCFE">arg</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">valueOf</span><span style="color:#D4D4D4">()</span><span style="color:#569CD6">}</span><span style="color:#CE9178">)\`</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#D4D4D4">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">		if</span><span style="color:#D4D4D4"> (</span><span style="color:#9CDCFE">arg</span><span style="color:#569CD6"> instanceof</span><span style="color:#4EC9B0"> FluentNumber</span><span style="color:#D4D4D4">) {</span></span>
<span class="line"><span style="color:#6A9955">			// eslint-disable-next-line svelte/prefer-svelte-reactivity</span></span>
<span class="line"><span style="color:#569CD6">			const</span><span style="color:#4FC1FF"> date</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> Date</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">Date</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">now</span><span style="color:#D4D4D4">());</span></span>
<span class="line"><span style="color:#569CD6">			const</span><span style="color:#4FC1FF"> offset</span><span style="color:#D4D4D4"> = </span><span style="color:#9CDCFE">arg</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">valueOf</span><span style="color:#D4D4D4">() - </span><span style="color:#9CDCFE">date</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">getDay</span><span style="color:#D4D4D4">();</span></span>
<span class="line"><span style="color:#9CDCFE">			date</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">setDate</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">date</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">getDate</span><span style="color:#D4D4D4">() + </span><span style="color:#9CDCFE">offset</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#C586C0">			return</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> FluentDateTime</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">date</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">valueOf</span><span style="color:#D4D4D4">(), {</span></span>
<span class="line"><span style="color:#9CDCFE">				weekday:</span><span style="color:#CE9178"> 'long'</span></span>
<span class="line"><span style="color:#D4D4D4">			});</span></span>
<span class="line"><span style="color:#D4D4D4">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">		if</span><span style="color:#D4D4D4"> (</span><span style="color:#9CDCFE">arg</span><span style="color:#569CD6"> instanceof</span><span style="color:#4EC9B0"> FluentDateTime</span><span style="color:#D4D4D4">) {</span></span>
<span class="line"><span style="color:#C586C0">			return</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> FluentDateTime</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">arg</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">valueOf</span><span style="color:#D4D4D4">(), {</span></span>
<span class="line"><span style="color:#9CDCFE">				weekday:</span><span style="color:#CE9178"> 'long'</span></span>
<span class="line"><span style="color:#D4D4D4">			});</span></span>
<span class="line"><span style="color:#D4D4D4">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0">		throw</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> TypeError</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'Invalid argument to WEEKDAY'</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#D4D4D4">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">, { </span><span style="color:#9CDCFE">functions:</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">WEEKDAY</span><span style="color:#D4D4D4"> } });</span></span>
<span class="line"><span style="color:#9CDCFE">	bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resourceEn</span><span style="color:#D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA">	initFluentContext</span><span style="color:#D4D4D4">(() </span><span style="color:#569CD6">=></span><span style="color:#DCDCAA"> createSvelteFluent</span><span style="color:#D4D4D4">([</span><span style="color:#9CDCFE">bundle</span><span style="color:#D4D4D4">]));</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">	&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"weekday-number"</span><span style="color:#9CDCFE"> args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">weekday:</span><span style="color:#B5CEA8"> 2</span><span style="color:#D4D4D4"> }</span><span style="color:#569CD6">}</span><span style="color:#808080"> /></span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">	&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"weekday-date"</span><span style="color:#9CDCFE"> args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">date:</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> Date</span><span style="color:#D4D4D4">(</span><span style="color:#B5CEA8">2024</span><span style="color:#D4D4D4">, </span><span style="color:#B5CEA8">1</span><span style="color:#D4D4D4">, </span><span style="color:#B5CEA8">6</span><span style="color:#D4D4D4">) }</span><span style="color:#569CD6">}</span><span style="color:#808080"> /></span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,Ds=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">weekday-number = </span><span style="color:#CE9178">Weekday </span><span style="color:#569CD6">{</span><span style="color:#9CDCFE"> $weekday </span><span style="color:#569CD6">}</span><span style="color:#CE9178"> is </span><span style="color:#569CD6">{</span><span style="color:#DCDCAA"> WEEKDAY(</span><span style="color:#9CDCFE">$weekday</span><span style="color:#DCDCAA">)</span><span style="color:#569CD6"> }</span></span>
<span class="line"><span style="color:#4EC9B0">weekday-date = </span><span style="color:#CE9178">Weekday of </span><span style="color:#569CD6">{</span><span style="color:#9CDCFE"> $date </span><span style="color:#569CD6">}</span><span style="color:#CE9178"> is </span><span style="color:#569CD6">{</span><span style="color:#DCDCAA"> WEEKDAY(</span><span style="color:#9CDCFE">$date</span><span style="color:#DCDCAA">)</span><span style="color:#569CD6"> }</span></span>
<span class="line"></span></code></pre>`;function ys(e){{let s=F(()=>({"App.svelte":{code:cs,html:!0},"en.ftl":{code:Ds,html:!0}}));v(e,{get sources(){return C(s)},children:(n,a)=>{rs(n,{})},$$slots:{default:!0}})}}function is(e,s){g(s,!1);const n=new m("en");n.addResource(G),A(()=>b([n])),w(),E(e,{id:"hello",args:{name:"everyone"}}),h()}const Cs=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">createSvelteFluent</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">initFluentContext</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> resourceEn</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './en.ftl'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#9CDCFE">	bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resourceEn</span><span style="color:#D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA">	initFluentContext</span><span style="color:#D4D4D4">(() </span><span style="color:#569CD6">=></span><span style="color:#DCDCAA"> createSvelteFluent</span><span style="color:#D4D4D4">([</span><span style="color:#9CDCFE">bundle</span><span style="color:#D4D4D4">]));</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"hello"</span><span style="color:#9CDCFE"> args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">name:</span><span style="color:#CE9178"> 'everyone'</span><span style="color:#D4D4D4"> }</span><span style="color:#569CD6">}</span><span style="color:#808080"> /></span></span>
<span class="line"></span></code></pre>`,us=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hello, </span><span style="color:#569CD6">{</span><span style="color:#9CDCFE"> $name </span><span style="color:#569CD6">}</span><span style="color:#CE9178">!</span></span>
<span class="line"></span></code></pre>`;function ds(e){{let s=F(()=>({"App.svelte":{code:Cs,html:!0},"en.ftl":{code:us,html:!0}}));v(e,{get sources(){return C(s)},children:(n,a)=>{is(n,{})},$$slots:{default:!0}})}}var fs=L("<div><!></div> <div><!></div> <div><!></div>",1);function Es(e,s){g(s,!1);const n=new m("en");n.addResource(Q),A(()=>b([n])),w();var a=fs(),l=B(a),t=u(l);E(t,{id:"dpi-ratio",args:{ratio:16/9}}),d(l);var D=c(l,2),p=u(D);{let i=F(()=>({balance:new O(1234.56,{style:"currency",currency:"USD"})}));E(p,{id:"balance",get args(){return C(i)}})}d(D);var o=c(D,2),r=u(o);E(r,{id:"today-is",args:{date:new Date}}),d(o),$(e,a),h()}const Fs=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">FluentNumber</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">createSvelteFluent</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">initFluentContext</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> resourceEn</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './en.ftl'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#9CDCFE">	bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resourceEn</span><span style="color:#D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA">	initFluentContext</span><span style="color:#D4D4D4">(() </span><span style="color:#569CD6">=></span><span style="color:#DCDCAA"> createSvelteFluent</span><span style="color:#D4D4D4">([</span><span style="color:#9CDCFE">bundle</span><span style="color:#D4D4D4">]));</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">div</span><span style="color:#808080">>&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"dpi-ratio"</span><span style="color:#9CDCFE"> args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">ratio:</span><span style="color:#B5CEA8"> 16</span><span style="color:#D4D4D4"> / </span><span style="color:#B5CEA8">9</span><span style="color:#D4D4D4"> }</span><span style="color:#569CD6">}</span><span style="color:#808080"> />&#x3C;/</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">	&#x3C;</span><span style="color:#4EC9B0">Localized</span></span>
<span class="line"><span style="color:#9CDCFE">		id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"balance"</span></span>
<span class="line"><span style="color:#9CDCFE">		args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">balance:</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> FluentNumber</span><span style="color:#D4D4D4">(</span><span style="color:#B5CEA8">1234.56</span><span style="color:#D4D4D4">, { </span><span style="color:#9CDCFE">style:</span><span style="color:#CE9178"> 'currency'</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">currency:</span><span style="color:#CE9178"> 'USD'</span><span style="color:#D4D4D4"> }) }</span><span style="color:#569CD6">}</span></span>
<span class="line"><span style="color:#808080">	/></span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">div</span><span style="color:#808080">>&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"today-is"</span><span style="color:#9CDCFE"> args</span><span style="color:#D4D4D4">=</span><span style="color:#569CD6">{</span><span style="color:#D4D4D4">{ </span><span style="color:#9CDCFE">date:</span><span style="color:#569CD6"> new</span><span style="color:#DCDCAA"> Date</span><span style="color:#D4D4D4">() }</span><span style="color:#569CD6">}</span><span style="color:#808080"> />&#x3C;/</span><span style="color:#569CD6">div</span><span style="color:#808080">></span></span>
<span class="line"></span></code></pre>`,gs=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">dpi-ratio = </span><span style="color:#CE9178">Your DPI ratio is </span><span style="color:#569CD6">{</span><span style="color:#DCDCAA"> NUMBER(</span><span style="color:#9CDCFE">$ratio</span><span style="color:#DCDCAA">,</span><span style="color:#DCDCAA"> minimumFractionDigits:</span><span style="color:#9CDCFE"> 2</span><span style="color:#DCDCAA">)</span><span style="color:#569CD6"> }</span></span>
<span class="line"><span style="color:#4EC9B0">balance = </span><span style="color:#CE9178">Your account balance is </span><span style="color:#569CD6">{</span><span style="color:#9CDCFE"> $balance </span><span style="color:#569CD6">}</span></span>
<span class="line"><span style="color:#4EC9B0">today-is = </span><span style="color:#CE9178">Today is </span><span style="color:#569CD6">{</span><span style="color:#DCDCAA"> DATETIME(</span><span style="color:#9CDCFE">$date</span><span style="color:#DCDCAA">,</span><span style="color:#DCDCAA"> month:</span><span style="color:#9CDCFE"> "long"</span><span style="color:#DCDCAA">,</span><span style="color:#DCDCAA"> year:</span><span style="color:#9CDCFE"> "numeric"</span><span style="color:#DCDCAA">,</span><span style="color:#DCDCAA"> day:</span><span style="color:#9CDCFE"> "numeric"</span><span style="color:#DCDCAA">)</span><span style="color:#569CD6"> }</span></span>
<span class="line"></span></code></pre>`;function hs(e){{let s=F(()=>({"App.svelte":{code:Fs,html:!0},"en.ftl":{code:gs,html:!0}}));v(e,{get sources(){return C(s)},children:(n,a)=>{Es(n,{})},$$slots:{default:!0}})}}const ms="([a-z]{2,3}|\\*)",As="(?:-([a-z]{4}|\\*))",bs="(?:-([a-z]{2}|\\*))",vs="(?:-(([0-9][a-z0-9]{3}|[a-z0-9]{5,8})|\\*))",ks=new RegExp(`^${ms}${As}?${bs}?${vs}?$`,"i");class k{constructor(s){const n=ks.exec(s.replace(/_/g,"-"));if(!n){this.isWellFormed=!1;return}let[,a,l,t,D]=n;a&&(this.language=a.toLowerCase()),l&&(this.script=l[0].toUpperCase()+l.slice(1)),t&&(this.region=t.toUpperCase()),this.variant=D,this.isWellFormed=!0}isEqual(s){return this.language===s.language&&this.script===s.script&&this.region===s.region&&this.variant===s.variant}matches(s,n=!1,a=!1){return(this.language===s.language||n&&this.language===void 0||a&&s.language===void 0)&&(this.script===s.script||n&&this.script===void 0||a&&s.script===void 0)&&(this.region===s.region||n&&this.region===void 0||a&&s.region===void 0)&&(this.variant===s.variant||n&&this.variant===void 0||a&&s.variant===void 0)}toString(){return[this.language,this.script,this.region,this.variant].filter(s=>s!==void 0).join("-")}clearVariants(){this.variant=void 0}clearRegion(){this.region=void 0}addLikelySubtags(){const s=xs(this.toString().toLowerCase());return s?(this.language=s.language,this.script=s.script,this.region=s.region,this.variant=s.variant,!0):!1}}const Y={ar:"ar-arab-eg","az-arab":"az-arab-ir","az-ir":"az-arab-ir",be:"be-cyrl-by",da:"da-latn-dk",el:"el-grek-gr",en:"en-latn-us",fa:"fa-arab-ir",ja:"ja-jpan-jp",ko:"ko-kore-kr",pt:"pt-latn-br",sr:"sr-cyrl-rs","sr-ru":"sr-latn-ru",sv:"sv-latn-se",ta:"ta-taml-in",uk:"uk-cyrl-ua",zh:"zh-hans-cn","zh-hant":"zh-hant-tw","zh-hk":"zh-hant-hk","zh-mo":"zh-hant-mo","zh-tw":"zh-hant-tw","zh-gb":"zh-hant-gb","zh-us":"zh-hant-us"},ws=["az","bg","cs","de","es","fi","fr","hu","it","lt","lv","nl","pl","ro","ru"];function xs(e){if(Object.prototype.hasOwnProperty.call(Y,e))return new k(Y[e]);const s=new k(e);return s.language&&ws.includes(s.language)?(s.region=s.language.toUpperCase(),s):null}function Ls(e,s,n){const a=new Set,l=new Map;for(let t of s)new k(t).isWellFormed&&l.set(t,new k(t));s:for(const t of e){const D=t.toLowerCase(),p=new k(D);if(p.language!==void 0){for(const o of l.keys())if(D===o.toLowerCase()){if(a.add(o),l.delete(o),n==="lookup")return Array.from(a);if(n==="filtering")continue;continue s}for(const[o,r]of l.entries())if(r.matches(p,!0,!1)){if(a.add(o),l.delete(o),n==="lookup")return Array.from(a);if(n==="filtering")continue;continue s}if(p.addLikelySubtags()){for(const[o,r]of l.entries())if(r.matches(p,!0,!1)){if(a.add(o),l.delete(o),n==="lookup")return Array.from(a);if(n==="filtering")continue;continue s}}p.clearVariants();for(const[o,r]of l.entries())if(r.matches(p,!0,!0)){if(a.add(o),l.delete(o),n==="lookup")return Array.from(a);if(n==="filtering")continue;continue s}if(p.clearRegion(),p.addLikelySubtags()){for(const[o,r]of l.entries())if(r.matches(p,!0,!1)){if(a.add(o),l.delete(o),n==="lookup")return Array.from(a);if(n==="filtering")continue;continue s}}p.clearRegion();for(const[o,r]of l.entries())if(r.matches(p,!0,!0)){if(a.add(o),l.delete(o),n==="lookup")return Array.from(a);if(n==="filtering")continue;continue s}}}return Array.from(a)}function $s(e,s,{strategy:n="filtering",defaultLocale:a}={}){const l=Ls(Array.from(e??[]).map(String),Array.from(s??[]).map(String),n);if(n==="lookup"){if(a===void 0)throw new Error("defaultLocale cannot be undefined for strategy `lookup`");l.length===0&&l.push(a)}else a&&!l.includes(a)&&l.push(a);return l}function Ss(e,s){g(s,!0);let n=as(s,"selectedLocale",3,"");const a="en",l={en:ss,fr:Z,de:X},t=Object.keys(l),D=I(()=>{const p=n()?[n()]:navigator.languages;return $s(p,t,{defaultLocale:a,strategy:"lookup"}).map(r=>{const i=new m(r);return i.addResource(l[r]),i})});A(()=>b(C(D))),E(e,{id:"hello"}),h()}const _s=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">createSvelteFluent</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">initFluentContext</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">negotiateLanguages</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/langneg'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> resourceEn</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './en.ftl'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> resourceDe</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './de.ftl'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> resourceFr</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './fr.ftl'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955">	// this could be stored in a user profile or browser localStorage</span></span>
<span class="line"><span style="color:#569CD6">	let</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">selectedLocale</span><span style="color:#D4D4D4"> = </span><span style="color:#CE9178">''</span><span style="color:#D4D4D4"> } = $</span><span style="color:#DCDCAA">props</span><span style="color:#D4D4D4">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> defaultLocale</span><span style="color:#D4D4D4"> = </span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> resources</span><span style="color:#D4D4D4"> = {</span></span>
<span class="line"><span style="color:#9CDCFE">		en:</span><span style="color:#9CDCFE"> resourceEn</span><span style="color:#D4D4D4">,</span></span>
<span class="line"><span style="color:#9CDCFE">		fr:</span><span style="color:#9CDCFE"> resourceFr</span><span style="color:#D4D4D4">,</span></span>
<span class="line"><span style="color:#9CDCFE">		de:</span><span style="color:#9CDCFE"> resourceDe</span></span>
<span class="line"><span style="color:#D4D4D4">	};</span></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> supportedLocales</span><span style="color:#D4D4D4"> = </span><span style="color:#9CDCFE">Object</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">keys</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resources</span><span style="color:#D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundles</span><span style="color:#D4D4D4"> = $</span><span style="color:#9CDCFE">derived</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">by</span><span style="color:#D4D4D4">(() </span><span style="color:#569CD6">=></span><span style="color:#D4D4D4"> {</span></span>
<span class="line"><span style="color:#569CD6">		const</span><span style="color:#4FC1FF"> userLocales</span><span style="color:#D4D4D4"> = </span><span style="color:#9CDCFE">selectedLocale</span><span style="color:#D4D4D4"> ? [</span><span style="color:#9CDCFE">selectedLocale</span><span style="color:#D4D4D4">] : </span><span style="color:#9CDCFE">navigator</span><span style="color:#D4D4D4">.</span><span style="color:#9CDCFE">languages</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#6A9955">		// Choose locales that are best for the user.</span></span>
<span class="line"><span style="color:#569CD6">		const</span><span style="color:#4FC1FF"> selectedLocales</span><span style="color:#D4D4D4"> = </span><span style="color:#DCDCAA">negotiateLanguages</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">userLocales</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">supportedLocales</span><span style="color:#D4D4D4">, {</span></span>
<span class="line"><span style="color:#9CDCFE">			defaultLocale</span><span style="color:#D4D4D4">,</span></span>
<span class="line"><span style="color:#9CDCFE">			strategy:</span><span style="color:#CE9178"> 'lookup'</span></span>
<span class="line"><span style="color:#D4D4D4">		});</span></span>
<span class="line"><span style="color:#6A9955">		// prepare fluent bundles</span></span>
<span class="line"><span style="color:#C586C0">		return</span><span style="color:#9CDCFE"> selectedLocales</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">map</span><span style="color:#D4D4D4">((</span><span style="color:#9CDCFE">locale</span><span style="color:#D4D4D4">) </span><span style="color:#569CD6">=></span><span style="color:#D4D4D4"> {</span></span>
<span class="line"><span style="color:#569CD6">			const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">locale</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#9CDCFE">			bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resources</span><span style="color:#D4D4D4">[</span><span style="color:#9CDCFE">locale</span><span style="color:#D4D4D4">]);</span></span>
<span class="line"><span style="color:#C586C0">			return</span><span style="color:#9CDCFE"> bundle</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#D4D4D4">		});</span></span>
<span class="line"><span style="color:#D4D4D4">	});</span></span>
<span class="line"><span style="color:#DCDCAA">	initFluentContext</span><span style="color:#D4D4D4">(() </span><span style="color:#569CD6">=></span><span style="color:#DCDCAA"> createSvelteFluent</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">bundles</span><span style="color:#D4D4D4">));</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"hello"</span><span style="color:#808080"> /></span></span>
<span class="line"></span></code></pre>`,zs=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hello, world!</span></span>
<span class="line"></span></code></pre>`,Bs=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Salut le monde !</span></span>
<span class="line"></span></code></pre>`,Rs=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hallo Welt!</span></span>
<span class="line"></span></code></pre>`;var Ts=L('<dl class="svelte-ytbw3t"><dt><label for="selected-locale">selectedLocale</label></dt> <dd><select id="selected-locale"><option>auto</option><option>de</option><option>en</option><option>fr</option></select></dd></dl>');function Ws(e){const s=M({selectedLocale:""});{const n=l=>{var t=Ts(),D=c(u(t),2),p=u(D);j(()=>{C(s),H(()=>{})});var o=u(p);o.value=o.__value="";var r=c(o);r.value=r.__value="de";var i=c(r);i.value=i.__value="en";var y=c(i);y.value=y.__value="fr",d(p),d(D),d(t),N(p,()=>C(s).selectedLocale,f=>K(s,C(s).selectedLocale=f)),$(l,t)};let a=F(()=>({"App.svelte":{code:_s,html:!0},"en.ftl":{code:zs,html:!0},"fr.ftl":{code:Bs,html:!0},"de.ftl":{code:Rs,html:!0}}));v(e,{get sources(){return C(a)},controls:n,children:(l,t)=>{Ss(l,ls(()=>C(s)))},$$slots:{controls:!0,default:!0}})}}function Ys(e,s){g(s,!1);const n=new m("en");n.addResource(ns),A(()=>b([n])),w(),E(e,{id:"hello"}),h()}const js=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">FluentBundle</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@fluent/bundle'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#D4D4D4"> { </span><span style="color:#9CDCFE">createSvelteFluent</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">initFluentContext</span><span style="color:#D4D4D4">, </span><span style="color:#9CDCFE">Localized</span><span style="color:#D4D4D4"> } </span><span style="color:#C586C0">from</span><span style="color:#CE9178"> '@nubolab-ffwd/svelte-fluent'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"><span style="color:#C586C0">	import</span><span style="color:#9CDCFE"> resourceEn</span><span style="color:#C586C0"> from</span><span style="color:#CE9178"> './en.ftl'</span><span style="color:#D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6">	const</span><span style="color:#4FC1FF"> bundle</span><span style="color:#D4D4D4"> = </span><span style="color:#569CD6">new</span><span style="color:#DCDCAA"> FluentBundle</span><span style="color:#D4D4D4">(</span><span style="color:#CE9178">'en'</span><span style="color:#D4D4D4">);</span></span>
<span class="line"><span style="color:#9CDCFE">	bundle</span><span style="color:#D4D4D4">.</span><span style="color:#DCDCAA">addResource</span><span style="color:#D4D4D4">(</span><span style="color:#9CDCFE">resourceEn</span><span style="color:#D4D4D4">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA">	initFluentContext</span><span style="color:#D4D4D4">(() </span><span style="color:#569CD6">=></span><span style="color:#DCDCAA"> createSvelteFluent</span><span style="color:#D4D4D4">([</span><span style="color:#9CDCFE">bundle</span><span style="color:#D4D4D4">]));</span></span>
<span class="line"><span style="color:#808080">&#x3C;/</span><span style="color:#569CD6">script</span><span style="color:#808080">></span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080">&#x3C;</span><span style="color:#4EC9B0">Localized</span><span style="color:#9CDCFE"> id</span><span style="color:#D4D4D4">=</span><span style="color:#CE9178">"hello"</span><span style="color:#808080"> /></span></span>
<span class="line"></span></code></pre>`,Os=`<pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4" tabindex="0"><code><span class="line"><span style="color:#4EC9B0">hello = </span><span style="color:#CE9178">Hello, world!</span></span>
<span class="line"></span></code></pre>`;function Ps(e){{let s=F(()=>({"App.svelte":{code:js,html:!0},"en.ftl":{code:Os,html:!0}}));v(e,{get sources(){return C(s)},children:(n,a)=>{Ys(n,{})},$$slots:{default:!0}})}}const Qs=[{rank:1,text:"Tutorial",id:"tutorial"},{rank:2,text:"First steps",id:"first-steps"},{rank:2,text:"Load translations from files",id:"load-translations-from-files"},{rank:2,text:"Multiple languages",id:"multiple-languages"},{rank:2,text:"Interpolation",id:"interpolation"},{rank:2,text:"Interpolation formatting",id:"interpolation-formatting"},{rank:2,text:"Custom functions",id:"custom-functions"}];var Is=L(`<h1 id="tutorial">Tutorial</h1> <h2 id="first-steps"><a href="#first-steps">First steps</a></h2> <p>You need to provide your translations to <code>svelte-fluent</code> by creating a <!> object
and initializing the <!>.</p> <p>In the most basic setup those translations can be defined directly in the code like this:</p> <!> <h2 id="load-translations-from-files"><a href="#load-translations-from-files">Load translations from files</a></h2> <p>Managing translations directly in the code can get messy.
A better way is to load translations from <code>.ftl</code> files.</p> <!> <h2 id="multiple-languages"><a href="#multiple-languages">Multiple languages</a></h2> <p>We can now extend this to multiple languages. Let’s add a selection for the
desired language and fallback to the auto-detected language of the browser.</p> <blockquote><p>This example will fail when used with server-side rendering (SSR) because during
SSR the component cannot use browser-only globals like <code>navigator.languages</code>.</p> <p>As an alternative that works in SSR you can parse the <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Language" rel="noopener noreferrer" target="_blank">HTTP Accept-Language header</a> and replace <code>navigator.languages</code> with the resulting list of locale identifiers.</p> <p>Check out the <a>SvelteKit integration guide</a> for an example how to do this.</p></blockquote> <!> <h2 id="interpolation"><a href="#interpolation">Interpolation</a></h2> <p>You can insert variables into your translated text by using <a href="https://projectfluent.org/fluent/guide/placeables.html" rel="noopener noreferrer" target="_blank">Fluent Placeables</a>.
Values for those variables are provided via the <code>args</code> prop of the <!> and <!> components.</p> <!> <h2 id="interpolation-formatting"><a href="#interpolation-formatting">Interpolation formatting</a></h2> <p>Fluent outputs interpolations in a human readable format appropriate to the currently used locale.
You can customize the formatting by using <a href="https://projectfluent.org/fluent/guide/functions.html" rel="noopener noreferrer" target="_blank">Fluent Functions</a>.</p> <p>Formatting parameters listed in “Parameters” in the <a href="https://projectfluent.org/fluent/guide/functions.html" rel="noopener noreferrer" target="_blank">Fluent Functions</a> documentation can be set both in the <code>.ftl</code> files or in the JS source.</p> <p>Parameters listed in “Developer parameters” can only be set in JS code.</p> <!> <h2 id="custom-functions"><a href="#custom-functions">Custom functions</a></h2> <p>You can extend the default <a href="https://projectfluent.org/fluent/guide/functions.html" rel="noopener noreferrer" target="_blank">Fluent Functions</a> with custom formatting functions by adding them to the <code>functions</code> option of <code>FluentBundle</code>.</p> <p>You can also check out the <a href="https://github.com/projectfluent/fluent.js/blob/master/fluent-bundle/src/builtins.ts" rel="noopener noreferrer" target="_blank">code of the built-in Fluent Functions</a> for more examples.</p> <!>`,1);function Xs(e){var s=Is(),n=c(B(s),4),a=c(u(n),3);x(a,{name:"SvelteFluent"});var l=c(a,2);x(l,{name:"FluentContext"}),_(),d(n);var t=c(n,4);ps(t);var D=c(t,6);Ps(D);var p=c(D,6),o=c(u(p),4),r=c(u(o));_(),d(o),d(p);var i=c(p,2);Ws(i);var y=c(i,4),f=c(u(y),5);x(f,{name:"Localized"});var S=c(f,2);x(S,{name:"Overlay"}),_(),d(y);var R=c(y,2);ds(R);var T=c(R,10);hs(T);var P=c(T,8);ys(P),j(()=>U(r,"href",`${q??""}/docs/integration#sveltekit`)),$(e,s)}export{Xs as _,Qs as h};
